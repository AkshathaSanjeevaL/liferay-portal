@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-163118=true";
	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	var caseType = "Case Type 1";
	var testSiteName = "Testray 2";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Testray Site") {
			Testray.addTestraySite(siteName = ${testSiteName});
		}

		task ("Create a case type via API") {
			JSONTestray.addCaseType(caseType = ${caseType});
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		task ("Logout And Login with test user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "test");
		}

		task ("Delete all objects, Testray Site and Client Extensions") {
			JSONTestrayAPI.deleteObjectViaAPI(
				object = "casetypes",
				objectName = ${caseType});

			Testray.tearDownCP();

		    ClientExtensionGeneral.goToRemoteAppsPortlet();

		    ClientExtensionGeneral.deleteRemoteApp(tableEntry = "Testray");
		}

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

}