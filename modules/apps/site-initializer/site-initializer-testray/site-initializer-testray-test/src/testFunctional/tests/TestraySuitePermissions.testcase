@component-name = "portal-solutions"
definition {

	property custom.properties = "feature.flag.LPS-163118=true";
	property osgi.modules.includes = "site-initializer-testray";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Site Initializer Testray";

	var testSiteName = "Testray 2";
	var projectName = "Project 1";
	var suiteName = "Suite 1";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Testray Site") {
			Testray.addTestraySite(siteName = ${testSiteName});
		}

		task ("Create a Project and suite via API") {
			JSONTestray.addProject(
				projectDescription = "Project Description 1",
				projectName = ${projectName});

			JSONTestray.addSuite(suiteName = ${suiteName});
		}
	}

	tearDown {
		task ("Logout And Login with test user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "test test");
		}

		task ("Delete project via API, Testray Site and Client Extensions") {
			JSONTestrayAPI.deleteProject(projectName = ${projectName});

			Testray.testrayApisTearDown();
		}

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Story ID: LPS-182630 | Test Summary: Verify that the User with the 'Testray Analyst' role should not be able to create the suite"
	@priority = 3
	test AssertAnalystRoleCanNotCreateSuite {
		property test.name.skip.portal.instance = "TestraySuitePermissions#AssertAnalystRoleCanNotCreateSuite";

		task ("Given that the user login with the Testray Analyst role") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "analyst@testray.com",
				userLoginFullName = "Analyst User");

			Navigator.openSiteURL(siteName = "Testray 2");
		}

		task ("When the user go to the suite page") {
			Testray.changePagination(
				numberItems = 20,
				valuePagination = 150);

			Testray.goToProjectPage(projectName = ${projectName});

			Testray.projectTabNavigator(navTabName = "Suites");
		}

		task ("Then the user can not create suite") {
			AssertElementNotPresent(locator1 = "Button#PLUS");
		}
	}

	@description = "Story ID: LPS-182630 | Test Summary: Verify that the User with the 'Testray Analyst' role should not be able to delete the suite"
	@priority = 3
	test AssertAnalystRoleCanNotDeleteSuite {
		property test.name.skip.portal.instance = "TestraySuitePermissions#AssertAnalystRoleCanNotDeleteSuite";

		task ("Given that the user login with the Testray Analyst role") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "analyst@testray.com",
				userLoginFullName = "Analyst User");

			Navigator.openSiteURL(siteName = "Testray 2");
		}

		task ("When the user right click in suite") {
			Testray.changePagination(
				numberItems = 20,
				valuePagination = 150);

			Testray.goToProjectPage(projectName = ${projectName});

			Testray.projectTabNavigator(navTabName = "Suites");

			RightClick.rightClick(
				key_projectName = ${suiteName},
				locator1 = "Testray#ITEM_NAME");
		}

		task ("Then the user can not delete the suite") {
			AssertElementNotPresent(
				item = "Delete",
				locator1 = "TestrayContextMenu#CONTEXT_MENU_PROJECTS_ITEMS");
		}
	}

}