definition {

	@summary = "This macro add a category via UI."
	macro addNewCategory {
		Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

		if (isSet(category)) {
			Type(
				locator1 = "TestrayManage#NEW_OPTION_NAME",
				value1 = ${category});
		}

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	@summary = "This macro add product version in the build."
	macro addProductVersionInBuild {
		Click(locator1 = "Button#PLUS");

		Type(
			locator1 = "TestrayBuild#TYPE_PRODUCT_VERSION_IN_BUILD",
			value1 = ${key_name});

		Click(locator1 = "TestrayManage#SAVE_BUTTON_IN_MODAL");
	}

	@summary = "This macro add project by sidebar."
	macro addProjectManageBar {
		TestrayLayout.clickManageOnSidebar();

		SelectFrame(locator1 = "TestrayManage#OPTIONS_MODAL");

		TestrayManage.selectOptionsManage(key_itemvalue = ${itemValue});

		Testray.createProjectTestray(
			description = ${description},
			key_name = ${name});

		Click(locator1 = "TestrayManage#CLOSE_MODAL");
	}

	@summary = "This macro assert title in the modal."
	macro assertTitleModal {
		AssertElementNotPresent(
			key_title = ${key_itemvalue},
			locator1 = "TestrayManage#TITLE_MODAL_ITEM");
	}

	@summary = "This macro close the modal"
	macro closeModalInOptions {
		Click(locator1 = "TestrayManage#CLOSE_MODAL");
	}

	@summary = "This macro add case type via UI."
	macro createNewCaseTypes {
		Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${caseName});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	@summary = "This macro add option via UI."
	macro createNewOption {
		Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${option});

		Select(
			locator1 = "TestrayManage#SELECT_CATEGORY_IN_OPTIONS",
			value1 = ${category});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	@summary = "This macro add product version via UI."
	macro createProductVersion {
		TestrayContextMenu.clickContextMenuProjects(name = ${nameOptions});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = ${manageOption});

		Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

		if (isSet(version)) {
			Type(
				locator1 = "TestrayManage#NEW_OPTION_NAME",
				value1 = ${version});
		}

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	@summary = "This macro add team via UI."
	macro createTeam {
		Click(locator1 = "TestrayManage#ADD_PROJECT_ON_MODAL");

		if (isSet(teamName)) {
			Type(
				locator1 = "TestrayManage#NEW_OPTION_NAME",
				value1 = ${teamName});
		}

		if (isSet(component)) {
			Click(
				key_parameterType = "Unassigned",
				locator1 = "TestraySuites#SMART_SUITE_PARAMETER_TYPE",
				value1 = ${component});

			Click(
				key_arrowDirection = "Right",
				key_parameterType = "Unassigned",
				locator1 = "TestraySuites#SMART_SUITE_ARROW");
		}

		Button.clickSave();
	}

	@summary = "This macro delete all case types."
	macro deleteAllCasesTypes {
		Refresh();

		TestrayLayout.clickManageOnSidebar();

		TestrayManage.selectOptionsManage(itemValue = "Case Types");

		Testray.changePaginationInModal(
			numberItems = 20,
			valuePagination = 150);

		while (IsElementPresent(key_projectName = "Case_", locator1 = "Testray#ITEM_NAME")) {
			TestrayContextMenu.clickContextMenuProjects(name = "Case_");

			TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

			AssertConfirm(value1 = "Are you sure you want to delete this item?");

			Alert.viewSuccessMessage();

			Testray.checkSuccessAlertAppearsAndDisappears();
		}
	}

	@summary = "This macro delete all categories."
	macro deleteAllCategories {
		Refresh();

		TestrayLayout.clickManageOnSidebar();

		TestrayManage.selectOptionsManage(itemValue = "Categories");

		while (IsElementPresent(key_projectName = "Environments_", locator1 = "Testray#ITEM_NAME")) {
			TestrayContextMenu.clickContextMenuProjects(name = "Environments_");

			TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

			AssertConfirm(value1 = "Are you sure you want to delete this item?");

			Alert.viewSuccessMessage();

			Testray.checkSuccessAlertAppearsAndDisappears();
		}
	}

	@summary = "This macro delete a case type."
	macro deleteCasesTypes {
		TestrayContextMenu.clickContextMenuProjects(name = ${valueName});

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this item?");

		Testray.checkSuccessAlertAppearsAndDisappears();
	}

	@summary = "This macro delete a category."
	macro deleteCategory {
		TestrayLayout.clickManageOnSidebar();

		TestrayManage.selectOptionsManage(itemValue = ${selectCategories});

		TestrayContextMenu.clickContextMenuProjects(name = ${nameCategory});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this item?");

		Alert.viewSuccessMessage();

		Testray.checkSuccessAlertAppearsAndDisappears();
	}

	@summary = "This macro delete a option."
	macro deleteOption {
		TestrayContextMenu.clickContextMenuProjects(name = ${nameOptions});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this item?");

		Alert.viewSuccessMessage();
	}

	@summary = "This macro delete a product version."
	macro deleteProductVersion {
		TestrayContextMenu.clickContextMenuProjects(name = ${versionName});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = ${itemManage});

		AssertConfirm(value1 = "Are you sure you want to delete this item?");

		Alert.viewSuccessMessage();
	}

	@summary = "This macro edit a category."
	macro editCategoryOption {
		Type(
			locator1 = "TestrayManage#SELECT_CATEGORY_IN_OPTIONS",
			value1 = ${category});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");

		Testray.checkSuccessAlertAppearsAndDisappears();
	}

	@summary = "This macro edit a category."
	macro editCategoryTitle {
		TestrayContextMenu.clickContextMenuProjects(name = ${category});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Edit");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${categoryNewName});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	@summary = "This macro edit a case type."
	macro editNewName {
		TestrayContextMenu.clickContextMenuProjects(name = ${valueName});

		MenuItem.clickNoError(menuItem = "Edit");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${valueType});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");

		Testray.checkSuccessAlertAppearsAndDisappears();
	}

	@summary = "This macro edit the options in the category."
	macro editOptionTitle {
		TestrayContextMenu.clickContextMenuProjects(name = ${option});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = "Edit");

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${optionNewName});

		Select(
			locator1 = "TestrayManage#SELECT_CATEGORY_IN_OPTIONS",
			value1 = ${category});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");

		Testray.checkSuccessAlertAppearsAndDisappears();
	}

	@summary = "This macro edit a product version."
	macro editProductVersion {
		TestrayContextMenu.clickContextMenuProjects(name = ${valueName});

		TestrayContextMenu.selectItemFromProjectsContextMenu(item = ${itemManage});

		Type(
			locator1 = "TestrayManage#NEW_OPTION_NAME",
			value1 = ${caseName});

		Click(locator1 = "TestrayManage#SAVE_BUTTON");
	}

	@summary = "This macro edit a team."
	macro editTeam {
		TestrayManage.editProductVersion(
			caseName = ${newTeamName},
			itemManage = "Edit",
			valueName = ${currentTeamName});
	}

	@summary = "This macro select options in the category."
	macro selectOptionDropdownCategory {
		Click(locator1 = "TestrayManage#DROPDOWN_CATEGORIES");

		MenuItem.clickNoError(menuItem = ${menuItem});

		Alert.viewSuccessMessage();
	}

	@summary = "This macro select options in the sidebar."
	macro selectOptionsManage {
		Click(
			key_itemvalue = ${itemValue},
			locator1 = "TestrayDropdown#OPTIONS_SIDEBAR");
	}

}