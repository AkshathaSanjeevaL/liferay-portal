definition {

	@summary = "This macro assert that a subtask has been merged."
	macro assertMergedSubtasks {
		for (var subtaskMerged : list ${listSubtaskMerged}) {
			AssertElementPresent(
				key_subtaskMerged = ${subtaskMerged},
				locator1 = "TestraySubtask#VERIFY_SUBTASK_MERGED");
		}
	}

	@summary = "This macro assert that a subtask has not been merged."
	macro assertNotMergedSubtasks {
		AssertElementNotPresent(
			key_subtaskMerged = ${subtask},
			locator1 = "TestraySubtask#VERIFY_SUBTASK_MERGED");
	}

	@summary = "This macro go to subtask."
	macro goToSubtask {
		Click(
			key_projectName = ${subtaskName},
			locator1 = "Testray#ITEM_NAME");
	}

	@summary = "This macro merge the subtasks."
	macro mergeSubtasks {
		for (var subtaskName : list ${wcsubtaskName}) {
			Click.clickAtNotVisible(
				key_checkboxOption = ${subtaskName},
				locator1 = "Checkbox#SPECIFIC_CHECKBOX_IN_TABLE");
		}

		if (isSet(buttonClear)) {
			Click(
				key_indexNumber = 2,
				key_text = "Clear",
				locator1 = "Button#ANY_N");
		}

		Button.click(button = "Merge Subtasks");
	}

	@summary = "This macro assert subtask details in the table."
	macro verifySubtaskDetails {
		AssertElementPresent(
			key_comment = ${comment},
			key_issues = ${issues},
			key_score = ${score},
			key_status = ${status},
			key_updated = ${updated},
			key_userName = ${userName},
			locator1 = "TestraySubtask#SUBTASK_DETAILS");
	}

}