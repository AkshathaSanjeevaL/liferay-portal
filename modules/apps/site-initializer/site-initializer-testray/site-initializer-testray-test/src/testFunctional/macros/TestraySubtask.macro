definition {

	macro assertMergedSubtasks {
		for (var subtaskMerged : list ${listSubtaskMerged}) {
			AssertElementPresent(
				key_subtaskMerged = ${subtaskMerged},
				locator1 = "TestraySubtask#VERIFY_SUBTASK_MERGED");
		}
	}

	macro goToSubtask {
		Click(
			key_projectName = ${subtaskName},
			locator1 = "Testray#ITEM_NAME");
	}

	macro mergeSubtasks {
		for (var subtaskName : list ${wcsubtaskName}) {
			Click.clickAtNotVisible(
				key_checkboxOption = ${subtaskName},
				locator1 = "Checkbox#SPECIFIC_CHECKBOX_IN_TABLE");
		}

		if (isSet(cancel)) {
			Button.click(button = ${cancel});
		}

		Button.click(button = "Merge Subtasks");
	}

	macro setupForSubtaskAPI {
		var projectId = TestrayAPI.createProjectAPI(
			projectDescription = "Projects_1 Project Description",
			projectName = "Projects_1 Project");

		var routineId = TestrayAPI.createRoutineAPI(
			autoanalyze = "false",
			projectId = ${projectId},
			routineName = "Routines_1 Routine");
		var productVersionId = TestrayAPI.createProductVersionAPI(
			productVersion = "1.2",
			projectId = ${projectId});
		var caseTypeId = TestrayAPI.createCaseTypeAPI(caseType = "Case_Type");
		var teamId = TestrayAPI.createTeamAPI(
			projectId = ${projectId},
			teamName = "Teams_1 Team");

		var componentId = TestrayAPI.createComponentAPI(
			componentName = "Components_1 Project",
			projectId = ${projectId},
			teamId = ${teamId});

		var casesId = TestrayAPI.createCasesAPI(
			casesName = "Cases_1 Case",
			caseTypeId = ${caseTypeId},
			componentId = ${componentId},
			description = "Cases_1 Case Description",
			estimatedDuration = 60,
			numberPriority = 5,
			priority = 5,
			projectId = ${projectId},
			steps = "Auto Test Steps");
		var casesId_2 = TestrayAPI.createCasesAPI(
			casesName = "Cases_2 Case",
			caseTypeId = ${caseTypeId},
			componentId = ${componentId},
			description = "Cases_2 Case Description",
			estimatedDuration = 40,
			numberPriority = 5,
			priority = 5,
			projectId = ${projectId},
			steps = "Auto Test Steps");
		var casesId_3 = TestrayAPI.createCasesAPI(
			casesName = "Cases_3 Case",
			caseTypeId = ${caseTypeId},
			componentId = ${componentId},
			description = "Cases_3 Case Description",
			estimatedDuration = 20,
			numberPriority = 5,
			priority = 5,
			projectId = ${projectId},
			steps = "Auto Test Steps");
		var casesId_4 = TestrayAPI.createCasesAPI(
			casesName = "Cases_4 Case",
			caseTypeId = ${caseTypeId},
			componentId = ${componentId},
			description = "Cases_4 Case Description",
			estimatedDuration = 10,
			numberPriority = 5,
			priority = 5,
			projectId = ${projectId},
			steps = "Auto Test Steps");
		var buildId = TestrayAPI.createBuildAPI(
			buildName = "Builds_1 Project",
			buildPromoted = "false",
			description = "Builds_1 Project Description",
			gitHash = 12345,
			productVersionId = ${productVersionId},
			projectId = ${projectId},
			routineId = ${routineId},
			statusTemplate = "true",
			template = "true");

		var runId = TestrayAPI.createRunAPI(
			buildId = ${buildId},
			runName = "Tomcat 6.0 | Chrome 57",
			runNumber = 1);

		var caseResultId = TestrayAPI.createCaseResultAPI(
			buildId = ${buildId},
			casesId = ${casesId},
			componentId = ${componentId},
			key = "UNTESTED",
			runId = ${runId},
			statusCaseResult = "Untested");
		var caseResultId_2 = TestrayAPI.createCaseResult2API(
			buildId = ${buildId},
			casesId_2 = ${casesId_2},
			componentId = ${componentId},
			key = "UNTESTED",
			runId = ${runId},
			statusCaseResult = "Untested");
		var caseResultId_3 = TestrayAPI.createCaseResult3API(
			buildId = ${buildId},
			casesId_3 = ${casesId_3},
			componentId = ${componentId},
			key = "UNTESTED",
			runId = ${runId},
			statusCaseResult = "Untested");
		var caseResultId_4 = TestrayAPI.createCaseResult4API(
			buildId = ${buildId},
			casesId_4 = ${casesId_4},
			componentId = ${componentId},
			key = "UNTESTED",
			runId = ${runId},
			statusCaseResult = "Untested");
		var taskId = TestrayAPI.createTaskAPI(
			buildId = ${buildId},
			key = "INANALYSIS",
			statusTask = "In Analysis",
			taskName = "Task_1");

		var subtaskId = TestrayAPI.createSubtaskAPI(
			key = "OPEN",
			score = 5,
			statusSubtask = "Open",
			subtaskName = "Subtask_1",
			subtaskNumber = 1,
			taskId = ${taskId});
		var subtaskId_2 = TestrayAPI.createSubtask2API(
			key = "OPEN",
			score = 5,
			statusSubtask = "Open",
			subtaskName = "Subtask_2",
			subtaskNumber = 2,
			taskId = ${taskId});
		var caseResultsForSubtaskId = TestrayAPI.createCaseResultsForSubtaskAPI(
			caseResultId = ${caseResultId},
			name = "caseResult_1",
			subtaskId = ${subtaskId});
		var caseResultsForSubtaskId_2 = TestrayAPI.createCaseResultsForSubtask2API(
			caseResultId_2 = ${caseResultId_2},
			name = "caseResult_2",
			subtaskId = ${subtaskId});
		var caseResultsForSubtaskId_3 = TestrayAPI.createCaseResultsForSubtask3API(
			caseResultId_3 = ${caseResultId_3},
			name = "caseResult_3",
			subtaskId_2 = ${subtaskId_2});
		var caseResultsForSubtaskId_4 = TestrayAPI.createCaseResultsForSubtask4API(
			caseResultId_4 = ${caseResultId_4},
			name = "caseResult_4",
			subtaskId_2 = ${subtaskId_2});
	}

	macro verifySubtaskDetails {
		AssertElementPresent(
			key_comment = ${comment},
			key_issues = ${issues},
			key_score = ${score},
			key_status = ${status},
			key_updated = ${updated},
			key_userName = ${userName},
			locator1 = "TestraySubtask#SUBTASK_DETAILS");
	}

}