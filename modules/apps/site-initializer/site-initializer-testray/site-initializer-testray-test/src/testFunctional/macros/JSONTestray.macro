definition {

	macro addBuild {
		Variables.assertDefined(parameterList = "${buildName},${projectName},${routineName},${productVersion}");

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});
		var routineId = JSONTestraySetter.getRoutineId(routineName = ${routineName});
		var productVersionId = JSONTestraySetter.getProductVersionId(productVersion = ${productVersion});

		var buildId = JSONTestrayAPI.createBuildAPI(
			buildName = ${buildName},
			productVersionId = ${productVersionId},
			projectId = ${projectId},
			routineId = ${routineId});
	}

	macro addCases {
		Variables.assertDefined(parameterList = "${caseName},${projectName},${componentName}");

		if (!(isSet(caseType))) {
			var caseType = "Case Type 1";
		}

		JSONTestray.addCaseType(caseType = ${caseType});

		var caseTypeId = JSONTestraySetter.getCaseTypeId(caseType = ${caseType});
		var componentId = JSONTestraySetter.getComponentId(componentName = ${componentName});
		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});

		var caseId = JSONTestrayAPI.createCasesAPI(
			caseName = ${caseName},
			caseTypeId = ${caseTypeId},
			componentId = ${componentId},
			projectId = ${projectId});
	}

	macro addCaseType {
		var caseTypeId = JSONTestrayAPI.createCaseTypeAPI(caseType = ${caseType});
	}

	macro addComponent {
		Variables.assertDefined(parameterList = "${componentName},${projectName},${teamName}");

		if (!(isSet(object))) {
			var object = "teams";
		}

		var projectId = JSONTestraySetter.getProjectId(projectName = ${projectName});
		var teamId = JSONTestraySetter.getTeamId(teamName = ${teamName});

		var componentId = JSONTestrayAPI.createComponentAPI(
			componentName = ${componentName},
			projectId = ${projectId},
			teamId = ${teamId});
	}

