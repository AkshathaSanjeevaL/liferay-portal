definition {

	var headers = '''
			-u test@liferay.com:test \
			-H Content-Type: application/json \
		''';

	macro _curlNObjectEntriesBody {
		Variables.assertDefined(parameterList = "${fieldName},${fieldValue}");

		var body = '''"${fieldName}": "${fieldValue}"''';

		if (isSet(secondField)) {
			var body = StringUtil.add("${body},", "\"secondField\":\"${secondFieldValue}\"", "");
		}

		if (isSet(externalReferenceCode)) {
			var body = StringUtil.add("${body},", "\"externalReferenceCode\": \"${externalReferenceCode}\"", "");
		}

		if (isSet(nestedField)) {
			var size = ${numberOfRelatedObjectEntries};

			if (!(isSet(externalReferenceCode))) {
				var externalReferenceCode = "";
			}

			var entryBody = '''
				"${nestedField}": [
			''';
			var i = 0;

			while ((${i} != ${size}) && (maxIterations = "10")) {
				var relatedEntryFieldValue = "${relatedEntryFieldName}${i}";

				if (isSet(objectEntryId)) {
					var relatedEntryFieldValue = "${relatedEntryFieldName}${i}-update";
				}

				var relatedObjectEntry = '''
					"${relatedEntryFieldName}": "${relatedEntryFieldValue}"
				''';

				if (isSet(relatedEntryExternalReferenceCode)) {
					var relatedObjectEntry = StringUtil.add("${relatedObjectEntry},", "\"externalReferenceCode\": \"${relatedEntryExternalReferenceCode}${i}\"", "");
				}

				var j = ${i} + 1;

				if (${j} == ${size}) {
					var entryBody = StringUtil.add(${entryBody}, "{${relatedObjectEntry}}]", "");
				}
				else {
					var entryBody = StringUtil.add(${entryBody}, "{${relatedObjectEntry}},", "");
				}

				var i = ${i} + 1;
			}

			var body = StringUtil.add("${body},", ${entryBody}, "");
		}

		return ${body};
	}

	macro _curlObjectEntries {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${fieldName},${fieldValue}");

		var en_US_plural_label_lowercase = StringUtil.lowerCase(${en_US_plural_label});

		if (isSet(virtualHost)) {
			if (!(isSet(port))) {
				var port = 8080;
			}

			var portalURL = "http://${virtualHost}:${port}";
		}
		else {
			var portalURL = JSONCompany.getPortalURL();
		}

		var api = "${portalURL}/o/c/${en_US_plural_label_lowercase}";

		if (isSet(objectEntryId)) {
			var api = "${api}/${objectEntryId}";
		}

		if (isSet(scopeKey)) {
			var scopeKey = JSONGroupAPI._getGroupIdByNameNoSelenium(
				groupName = "Guest",
				site = "true");

			var api = StringUtil.add(${api}, "/scopes/${scopeKey}", "");
		}

		var curlWithoutBody = StringUtil.add(${api}, " \ ${headers}", "");
		var body = CustomObjectAPI._curlNObjectEntriesBody(
			externalReferenceCode = ${externalReferenceCode},
			fieldName = ${fieldName},
			fieldValue = ${fieldValue},
			nestedField = ${nestedField},
			numberOfRelatedObjectEntries = ${numberOfRelatedObjectEntries},
			objectEntryId = ${objectEntryId},
			relatedEntryExternalReferenceCode = ${relatedEntryExternalReferenceCode},
			relatedEntryFieldName = ${relatedEntryFieldName},
			secondField = ${secondField},
			secondFieldValue = ${secondFieldValue});

		var curl = StringUtil.add(${curlWithoutBody}, "-d {${body}}", " ");

		if (isSet(token)) {
			var curl = StringUtil.add(${curl}, " -H 'Authorization: Bearer ${token}'", "");
		}

		return ${curl};
	}

	macro _curlObjectPermissions {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${objectEntryId}");

		var en_US_plural_label_lowercase = StringUtil.lowerCase(${en_US_plural_label});
		var portalURL = JSONCompany.getPortalURL();

		var api = "${portalURL}/o/c/${en_US_plural_label_lowercase}/${objectEntryId}/permissions";

		if (isSet(roleNames)) {
			var api = StringUtil.add(${curl}, "?roleNames=${roleNames}", "");
		}

		var curl = StringUtil.add(${api}, " \ ${headers}", "");

		return ${curl};
	}

	macro assertCorrectObjectEntryCount {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${expectedCount}");

		var response = ObjectDefinitionAPI.getObjectEntries(en_US_plural_label = ${en_US_plural_label});

		var objectEntryCount = JSONUtil.getWithJSONPath(${response}, "$.totalCount");

		TestUtils.assertEquals(
			actual = ${objectEntryCount},
			expected = ${expectedCount});
	}

	macro createObjectEntryWithField {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${fieldName},${fieldValue}");

		var curl = CustomObjectAPI._curlObjectEntries(
			en_US_plural_label = ${en_US_plural_label},
			externalReferenceCode = ${externalReferenceCode},
			fieldName = ${fieldName},
			fieldValue = ${fieldValue},
			nestedField = ${nestedField},
			numberOfRelatedObjectEntries = ${numberOfRelatedObjectEntries},
			relatedEntryExternalReferenceCode = ${relatedEntryExternalReferenceCode},
			relatedEntryFieldName = ${relatedEntryFieldName},
			scopeKey = ${scopeKey},
			secondField = ${secondField},
			secondFieldValue = ${secondFieldValue},
			token = ${token},
			virtualHost = ${virtualHost});

		var response = JSONCurlUtil.post(${curl});

		return ${response};
	}

	macro getObjectPermissions {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${objectEntryId}");

		var curl = CustomObjectAPI._curlObjectPermissions(
			en_US_plural_label = ${en_US_plural_label},
			objectEntryId = ${objectEntryId});

		var response = JSONCurlUtil.get(${curl});

		return ${response};
	}

	macro staticObjectDefinitionId {
		Variables.assertDefined(parameterList = ${objectDefinitionId});

		static var staticObjectDefinitionId = ${objectDefinitionId};

		return ${staticObjectDefinitionId};
	}

	macro staticObjectEntryId {
		Variables.assertDefined(parameterList = ${objectEntryId});

		static var staticObjectId = ${objectEntryId};

		return ${staticObjectId};
	}

	macro updateObjectEntry {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${objectEntryId},${fieldName},${fieldValue}");

		var curl = CustomObjectAPI._curlObjectEntries(
			en_US_plural_label = ${en_US_plural_label},
			externalReferenceCode = ${externalReferenceCode},
			fieldName = ${fieldName},
			fieldValue = ${fieldValue},
			nestedField = ${nestedField},
			numberOfRelatedObjectEntries = ${numberOfRelatedObjectEntries},
			objectEntryId = ${objectEntryId},
			relatedEntryExternalReferenceCode = ${relatedEntryExternalReferenceCode},
			relatedEntryFieldName = ${relatedEntryFieldName});

		var response = JSONCurlUtil.put(${curl});

		return ${response};
	}

	macro updateObjectPermissions {
		Variables.assertDefined(parameterList = "${en_US_plural_label},${objectEntryId},${actionIds},${roleName}");

		var curl = CustomObjectAPI._curlObjectPermissions(
			en_US_plural_label = ${en_US_plural_label},
			objectEntryId = ${objectEntryId});
		var body = '''
			-d [{
				"actionIds": [
					${actionIds}
				],
				"roleName": "${roleName}"
			}]
		''';

		var curl = StringUtil.add(${curl}, " \ ${body}", "");

		var response = JSONCurlUtil.put(${curl});

		return ${response};
	}

}