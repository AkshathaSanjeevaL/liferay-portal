@component-name = "portal-object"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Object";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-165850 - Verify it's possible to add a new entry in the related object without leaving the current context (OneToMany)"
	@ignore = "true"
	@priority = "5"
	test CanAddEntryRelationshipTabOnLayoutCurrent {
		property custom.properties = "feature.flag.LPS-165850=true";

		task ("Given a related object with Custom Layout and Relationship tab") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 171590",
				objectName = "CustomObject171590",
				pluralLabelName = "Custom Objects 171590");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "Text",
				fieldLabelName = "Custom Field",
				fieldName = "customField",
				fieldType = "String",
				isRequired = "false",
				objectName = "CustomObject171590");

			ObjectAdmin.addObjectRelationshipViaAPI(
				objectName_1 = "CustomObject171590",
				objectName_2 = "CustomObject171590",
				relationshipLabel = "Relationship",
				relationshipName = "relationship",
				relationshipType = "oneToMany");

			ObjectAdmin.addObjectLayoutViaAPI(
				layoutName = "Custom Layout",
				objectName = "CustomObject171590");

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject171590");

			ObjectAdmin.openObjectAdmin();

			ObjectPortlet.selectCustomObject(label = "Custom Object 171590");

			ObjectAdmin.goToLayoutsTab();

			ObjectAdmin.selectSpecificKebabMenuOption(
				kebabOption = "View",
				objectLabel = "Custom Layout");

			ObjectAdmin.markLayoutAsDefault();

			ObjectAdmin.goToLayoutTabOnLayouts();

			ObjectAdmin.addTabFieldsOnLayout(
				blockName = "Block 1",
				columnsNumber = "1",
				fieldList = "Custom Field",
				tabName = "Field Tab");

			ObjectAdmin.addTabRelationshipsOnLayout(
				relationshipsLabelName = "Relationship",
				tabName = "Relationship Tab");

			Button.clickSave();
		}

		task ("When add the entry") {
			ObjectAdmin.addObjectSingleFieldEntryViaAPI(
				fieldName = "customField",
				objectName = "CustomObject171590",
				value = "Entry Test");

			ObjectAdmin.goToCustomObject(objectName = "CustomObject171590");

			ObjectPortlet.viewEntryDetails(entry = "Entry Test");

			ObjectAdmin.gotoRelationshipsTab();

			ObjectCustomLayouts.addEntryOnRelationshipTab(newEntry = "New entry related");
		}

		task ("Then the user stays in the current context") {
			AssertElementPresent(
				key_tabName = "Field Tab",
				locator1 = "ObjectAdmin#ANY_TAB_ON_ENTRY");

			AssertElementPresent(
				key_tabName = "Relationship Tab",
				locator1 = "ObjectAdmin#ANY_TAB_ON_ENTRY");

			AssertElementPresent(
				key_labelName = "Custom Field",
				locator1 = "ObjectAdmin#LABEL_FIELD_ENTRY");

			Navigator.gotoBack();

			WaitForPageLoad();

			CreateObject.assertEntrySelectedOnRelationshipField(entry = "New entry related");
		}
	}

	@description = "LPS-161884 - Verify that it's possible to create an object with a categorization section in the layout"
	@priority = "3"
	test CanCreateObjectWithCategorizationSection {
		property test.name.skip.portal.instance = "ObjectCustomLayouts#CanCreateObjectWithCategorizationSection";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 200",
			objectName = "CustomObject200",
			pluralLabelName = "Custom Objects 200");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject200");

		ObjectAdmin.addObjectLayoutViaAPI(
			layoutName = "Layout Name",
			objectName = "CustomObject200");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 200");

		ObjectAdmin.goToLayoutsTab();

		ObjectAdmin.selectKebabMenuOption(kebabOption = "View");

		ObjectAdmin.markLayoutAsDefault();

		ObjectAdmin.goToLayoutTabOnLayouts();

		ObjectAdmin.addTabFieldsOnLayout(
			blockName = "Block 1",
			columnsNumber = "1",
			fieldLabelName = "Custom Field",
			tabName = "Field Tab");

		ObjectAdmin.addCategorizationOnLayoutTab();

		PortletEntry.save();

		Navigator.openURL();

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject200");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject200");

		LexiconEntry.gotoAdd();

		ObjectAdmin.viewCategorizationInObjectEntry();
	}

	@description = "LPS-161886 - Verify that it's possible to delete a categorization section"
	@priority = "3"
	test CanDeleteCategorizationSection {
		property test.name.skip.portal.instance = "ObjectCustomLayouts#CanDeleteCategorizationSection";

		task ("Given: An object with the layout categorization section") {
			ObjectAdmin.addObjectViaAPI(
				labelName = "Custom Object 200",
				objectName = "CustomObject200",
				pluralLabelName = "Custom Objects 200");

			ObjectAdmin.addObjectFieldViaAPI(
				fieldBusinessType = "Text",
				fieldLabelName = "Custom Field",
				fieldName = "customField",
				fieldType = "String",
				isRequired = "false",
				objectName = "CustomObject200");

			ObjectAdmin.addObjectLayoutViaAPI(
				layoutName = "Layout Name",
				objectName = "CustomObject200");

			ObjectAdmin.openObjectAdmin();

			ObjectPortlet.selectCustomObject(label = "Custom Object 200");

			ObjectAdmin.goToLayoutsTab();

			ObjectAdmin.selectKebabMenuOption(kebabOption = "View");

			ObjectAdmin.goToLayoutTabOnLayouts();

			ObjectAdmin.addTabFieldsOnLayout(
				blockName = "Block 1",
				columnsNumber = "1",
				fieldLabelName = "Custom Field",
				tabName = "Field Tab");

			ObjectAdmin.addCategorizationOnLayoutTab();

			PortletEntry.save();

			ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject200");
		}

		task ("When: Delete the categorization Section") {
			ObjectAdmin.openObjectAdmin();

			ObjectPortlet.selectCustomObject(label = "Custom Object 200");

			ObjectAdmin.goToLayoutsTab();

			ObjectAdmin.selectKebabMenuOption(kebabOption = "View");

			ObjectAdmin.goToLayoutTabOnLayouts();

			ObjectAdmin.deleteCategorizationViaUI();

			PortletEntry.save();
		}

		task ("Then: The object layout is updated successfully") {
			ObjectAdmin.selectKebabMenuOption(kebabOption = "View");

			ObjectAdmin.goToLayoutTabOnLayouts();

			AssertElementNotPresent(locator1 = "ObjectAdmin#CATEGORIZATION_DROPDOWN");
		}
	}

	@description = "LPS-161885 - Verify that it's possible to edit a categorization section"
	@priority = "3"
	test CanEditCategorizationSection {
		property test.name.skip.portal.instance = "ObjectCustomLayouts#CanEditCategorizationSection";

		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 200",
			objectName = "CustomObject200",
			pluralLabelName = "Custom Objects 200");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject200");

		ObjectAdmin.addObjectLayoutViaAPI(
			layoutName = "Layout Name",
			objectName = "CustomObject200");

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 200");

		ObjectAdmin.goToLayoutsTab();

		ObjectAdmin.selectKebabMenuOption(kebabOption = "View");

		ObjectAdmin.markLayoutAsDefault();

		ObjectAdmin.goToLayoutTabOnLayouts();

		ObjectAdmin.addTabFieldsOnLayout(
			blockName = "Block 1",
			columnsNumber = "1",
			fieldLabelName = "Custom Field",
			tabName = "Field Tab");

		ObjectAdmin.addCategorizationOnLayoutTab();

		PortletEntry.save();

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject200");

		Navigator.openURL();

		JSONCategory.addCategory(
			groupName = "Global",
			title = "Category 1",
			vocabularyName = "Topic");

		JSONCategory.addCategory(
			groupName = "Global",
			title = "Category 2",
			vocabularyName = "Stage");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject200");

		LexiconEntry.gotoAdd();

		ObjectAdmin.selectCategoryInObjectEntry(
			categoryNameList = "Category 1",
			vocabularyName = "Topic");

		ObjectAdmin.selectCategoryInObjectEntry(
			categoryNameList = "Category 2",
			vocabularyName = "Stage");

		PortletEntry.save();

		AssetCategorization.removeCategories(categoryNameList = "Category 1,Category 2");
	}

	@description = "LPS-135397 - Verify that it is not possible to save another Layout as default"
	@priority = "4"
	test CannotSaveAnotherLayoutAsDefault {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 200",
			objectName = "CustomObject200",
			pluralLabelName = "Custom Objects 200");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Text",
			fieldLabelName = "Custom Field",
			fieldName = "customField",
			fieldType = "String",
			isRequired = "false",
			objectName = "CustomObject200");

		for (var letter : list "A,B") {
			ObjectAdmin.addObjectLayoutViaAPI(
				layoutName = "Layout ${letter}",
				objectName = "CustomObject200");
		}

		ObjectAdmin.openObjectAdmin();

		ObjectPortlet.selectCustomObject(label = "Custom Object 200");

		ObjectAdmin.goToLayoutsTab();

		ObjectAdmin.selectSpecificKebabMenuOption(
			kebabOption = "View",
			objectLabel = "Layout A");

		ObjectAdmin.markLayoutAsDefault();

		ObjectAdmin.goToLayoutTabOnLayouts();

		ObjectAdmin.addTabFieldsOnLayout(
			blockName = "Block 1",
			columnsNumber = "1",
			fieldLabelName = "Custom Field",
			tabName = "Field Tab");

		PortletEntry.save();

		Refresh();

		ObjectAdmin.selectSpecificKebabMenuOption(
			kebabOption = "View",
			objectLabel = "Layout B");

		ObjectAdmin.markLayoutAsDefault();

		ObjectAdmin.goToLayoutTabOnLayouts();

		ObjectAdmin.addTabFieldsOnLayout(
			blockName = "Block 2",
			columnsNumber = "1",
			fieldLabelName = "Custom Field",
			tabName = "Field Tab");

		Button.clickSave();

		SelectFrame(locator1 = "Message#ERROR");

		AssertTextEquals(
			locator1 = "Message#ERROR",
			value1 = "Error:There can only be one default object layout");
	}

	@description = "LPS-146808 - Verify it is possibel to view a Date entry and label"
	@priority = "4"
	test CanViewDateEntry {
		ObjectAdmin.addObjectViaAPI(
			labelName = "Custom Object 200",
			objectName = "CustomObject200",
			pluralLabelName = "Custom Objects 200");

		ObjectAdmin.addObjectFieldViaAPI(
			fieldBusinessType = "Date",
			fieldLabelName = "Custom Field",
			fieldName = "customObjectField",
			fieldType = "Date",
			isRequired = "false",
			objectName = "CustomObject200");

		ObjectAdmin.addObjectLayoutViaAPI(
			layoutName = "Layout Name",
			objectName = "CustomObject200");

		ObjectAdmin.publishObjectViaAPI(objectName = "CustomObject200");

		ObjectAdmin.addObjectSingleFieldEntryViaAPI(
			fieldName = "customObjectField",
			objectName = "CustomObject200",
			value = "2022-01-01");

		ObjectAdmin.goToCustomObject(objectName = "CustomObject200");

		ObjectPortlet.viewEntryDetails(entry = "Jan 1, 2022");

		ObjectPortlet.assertEntryDetailsLabelPresent(entryLabel = "Custom Field");

		ObjectPortlet.assertEntryDetailsValuePresent(entryValue = "01/01/2022");
	}

}