/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies.upgrade;

import com.liferay.portal.kernel.util.HtmlParser;

import com.liferay.portal.kernel.util.HtmlUtil;
import com.liferay.portal.kernel.util.Localization;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

/**
 * @author NÃ­colas Moura
 */
@Component(
	property = "indexer.class.name=com.liferay.source.formatter.dependencies.upgrade.UpgradeJavaExtractTextMethodCheck",
	service = UpgradeJavaExtractTextMethodCheck.class
)
public class UpgradeJavaExtractTextMethodCheck {

	public void method() {

		// Tests direct method call

		_htmlParser.extractText(testEntry.getContent());

		if (true) {

			// Test method with variable declaration with a larger tabulation
			// and a line break

			String contentVariableLineBreak = _htmlParser.extractText(
				testEntry.getContent());
		}
	}

	@Reference
	private Localization _localization;

	// Tests adding the new reference after the end of the file

	@Reference
	private HtmlParser _htmlParser;
}