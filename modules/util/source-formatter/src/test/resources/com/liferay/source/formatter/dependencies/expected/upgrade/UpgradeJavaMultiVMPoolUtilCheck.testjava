/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.source.formatter.dependencies.upgrade;

import com.liferay.portal.kernel.cache.MultiVMPool;
import com.liferay.portal.kernel.cache.PortalCache;

import com.test.CalledParameterClassTest;

import java.io.Serializable;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

/**
 * @author NÃ­colas Moura
 */
@Component(
	property = "indexer.class.name=com.liferay.source.formatter.dependencies.upgrade.UpgradeJavaMultiVMPoolUtilCheck",
	service = UpgradeJavaMultiVMPoolUtilCheck.class
)
public class UpgradeJavaMultiVMPoolUtilCheck {

	public void method() {

		// Tests type recovery by the variable declaration

		PortalCache<String, Serializable> portalCache =
			(PortalCache<String, Serializable>) _multiVMPool.getPortalCache("TEST_GET_PORTAL_CACHE");

		// Test scenario when it is not possible to retrieve types for cast

		_calledParameterClassTest.anotherMethod(
			(PortalCache<TO_BE_REPLACED, TO_BE_REPLACED>) _multiVMPool.getPortalCache("TEST_GET_PORTAL_CACHE"));
	}

	@Reference
	private CalledParameterClassTest _calledParameterClassTest;


	@Reference
	private MultiVMPool _multiVMPool;

}