<?xml version="1.0" ?>

<!-- W3C rules retrieved from: http://www.w3.org/TR/html401/struct/global.html -->

<anti-samy-rules xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="antisamy.xsd">
	<directives>
		<directive name="omitXmlDeclaration" value="true" />
		<directive name="omitDoctypeDeclaration" value="true" />
		<directive name="maxInputSize" value="100000" />
		<directive name="formatOutput" value="false" />
		<directive name="onUnknownTag" value="encode" />

		<!-- remember, this won't work for relative URIs - AntiSamy doesn't know anything about the URL or your web structure -->

		<directive name="embedStyleSheets" value="false" />
	</directives>
	<common-regexps>

		<!-- From W3C: This attribute assigns a class name or set of class names to an element. Any number of elements may be assigned the same
			class name or names. Multiple class names must be separated by white space characters. -->

		<!-- The 16 colors defined by the HTML Spec (also used by the CSS Spec) -->

		<regexp
			name="colorName"
			value="(aqua|black|blue|fuchsia|gray|grey|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow)"
		/>

		<!-- HTML/CSS Spec allows 3 or 6 digit hex to specify color -->

		<regexp name="colorCode" value="(#([0-9a-fA-F]{6}|[0-9a-fA-F]{3}))" />
		<regexp name="anything" value=".*" />
		<regexp name="numberOrPercent" value="(\d)+(%{0,1})" />
		<regexp name="paragraph" value="([\p{L}\p{N},'\.\s\-_\(\)]|&amp;[0-9]{2};)*" />
		<regexp name="htmlId" value="[a-zA-Z0-9\:\-_\.]+" />
		<regexp name="htmlTitle" value="[\p{L}\p{N}\s\-_',:\[\]!\./\\\(\)&amp;]*" /> <!-- force non-empty with a '+' at the end instead of '*' -->

		<regexp name="htmlClass" value="[a-zA-Z0-9\s,\-_]+" />
		<regexp
			name="onsiteURL"
			value="^(?!//)(?![\p{L}\p{N}\\\.\#@\$%\+&amp;;\-_~,\?=/!]*(&amp;colon))[\p{L}\p{N}\\\.\#@\$%\+&amp;;\-_~,\?=/!]*"
		/>
		<regexp
			name="offsiteURL"
			value="(\s)*((ht|f)tp(s?)://|mailto:)[\p{L}\p{N}]+[\p{L}\p{N}\p{Zs}\.\#@\$%\+&amp;;:\-_~,\?=/!\(\)]*(\s)*"
		/>

		<regexp name="boolean" value="(true|false)" />
		<regexp name="singlePrintable" value="[a-zA-Z0-9]{1}" /> <!-- \w allows the '_' character -->

		<!-- This is for elements (ex: elemName { ... }) -->

		<regexp name="cssElementSelector" value="[a-zA-Z0-9\-_]+|\*" />

		<!-- This is to list out any element names that are *not* valid -->

		<regexp name="cssElementExclusion" value="" />

		<!-- This if for classes (ex: .className { ... }) -->

		<regexp name="cssClassSelector" value="\.[a-zA-Z0-9\-_]+" />

		<!-- This is to list out any class names that are *not* valid -->

		<regexp name="cssClassExclusion" value="" />

		<!-- This is for ID selectors (ex: #myId { ... } -->

		<regexp name="cssIDSelector" value="#[a-zA-Z0-9\-_]+" />

		<!-- This is to list out any IDs that are *not* valid - FIXME: What should the default be to avoid div hijacking? *? -->

		<regexp name="cssIDExclusion" value="" />

		<!-- This is for pseudo-element selector (ex. foo:pseudo-element { ... } -->

		<regexp name="cssPseudoElementSelector" value=":[a-zA-Z0-9\-_]+" />

		<!-- This is to list out any psuedo-element names that are *not* valid -->

		<regexp name="cssPsuedoElementExclusion" value="" />

		<!-- This is for attribute selectors (ex. foo[attr=value] { ... } -->

		<regexp name="cssAttributeSelector" value="\[[a-zA-Z0-9\-_]+((=|~=|\|=){1}[a-zA-Z0-9\-_]+){1}\]" />

		<!-- This is to list out any attribute names that are *not* valid -->

		<regexp name="cssAttributeExclusion" value="" />

		<!-- This is for resources referenced from CSS (such as background images and other imported stylesheets) -->

		<regexp name="cssOnsiteUri" value="url\(([\p{L}\p{N}\\/\.\?=\#&amp;;\-_~]+|\#(\w)+)\)" />
		<regexp
			name="cssOffsiteUri"
			value="url\((\s)*((ht|f)tp(s?)://)[\p{L}\p{N}]+[~\p{L}\p{N}\p{Zs}\-_\.@#$%&amp;;:,\?=/\+!]*(\s)*\)"
		/>

		<!-- This if for CSS Identifiers -->

		<regexp name="cssIdentifier" value="[a-zA-Z0-9\-_]+" />

		<!-- This is for comments within CSS (ex. /* comment */) -->

		<regexp name="cssCommentText" value="[\p{L}\p{N}\-_,\/\\\.\s\(\)!\?\=\$#%\^&amp;:&quot;']+" />
		<regexp name="integer" value="(-|\+)?[0-9]+" />
		<regexp name="positiveInteger" value="(\+)?[0-9]+" />
		<regexp name="number" value="(-|\+)?([0-9]+(\.[0-9]+)?)" />
		<regexp name="angle" value="(-|\+)?([0-9]+(\.[0-9]+)?)(deg|grad|rad)" />
		<regexp name="time" value="([0-9]+(\.[0-9]+)?)(ms|s)" />
		<regexp name="frequency" value="([0-9]+(\.[0-9]+)?)(hz|khz)" />
		<regexp name="length" value="((-|\+)?0|(-|\+)?([0-9]+(\.[0-9]+)?([eE][+-]?[0-9]+)?)(rem|vw|vh|em|ex|px|in|cm|mm|pt|pc))" />
		<regexp name="positiveLength" value="((\+)?0|(\+)?([0-9]+(\.[0-9]+)?([eE][+-]?[0-9]+)?)(rem|vw|vh|em|ex|px|in|cm|mm|pt|pc))" />
		<regexp name="percentage" value="(-|\+)?([0-9]+(\.[0-9]+)?)%" />
		<regexp name="positivePercentage" value="(\+)?([0-9]+(\.[0-9]+)?)%" />
		<regexp name="absolute-size" value="(xx-small|x-small|small|medium|large|x-large|xx-large)" />
		<regexp name="relative-size" value="(larger|smaller)" />

		<!-- Used for CSS Color specifications (complex regexp expresses integer values of 0-255) -->

		<regexp
			name="rgbCode"
			value="rgb\(([1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]),([1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]),([1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\)"
		/>

		<!-- CSS2 Allowed System Color Values -->

		<regexp
			name="systemColor"
			value="(activeborder|activecaption|appworkspace|background|buttonface|buttonhighlight|buttonshadow|buttontext|captiontext|graytext|highlight|highlighttext|inactiveborder|inactivecaption|inactivecaptiontext|infobackground|infotext|menu|menutext|scrollbar|threeddarkshadow|threedface|threedhighlight|threedlightshadow|threedshadow|window|windowframe|windowtext)"
		/>
	</common-regexps>

	<!-- Tag.name = a, b, div, body, etc. Tag.action = filter: remove tags, but keep content, validate: keep content as long as it passes rules,
		remove: remove tag and contents Attribute.name = id, class, href, align, width, etc. Attribute.onInvalid = what to do when the attribute is invalid,
		e.g., remove the tag (removeTag), remove the attribute (removeAttribute), filter the tag (filterTag) Attribute.description = What rules in English
		you want to tell the users they can have for this attribute. Include helpful things so they'll be able to tune their HTML -->

	<!-- Some attributes are common to all (or most) HTML tags. There aren't many that qualify for this. You have to make sure there's no collisions
		between any of these attribute names with attribute names of other tags that are for different purposes. -->

	<common-attributes>

		<!-- Common to all HTML tags -->

		<attribute description="The 'id' of any HTML attribute should not contain anything besides letters and numbers" name="id">
			<regexp-list>
				<regexp name="htmlId" />
			</regexp-list>
		</attribute>
		<attribute description="The 'class' of any HTML attribute is usually a single word, but it can also be a list of class names separated by spaces" name="class">
			<regexp-list>
				<regexp name="htmlClass" />
			</regexp-list>
		</attribute>
		<attribute description="The 'lang' attribute tells the browser what language the element's attribute values and content are written in" name="lang">
			<regexp-list>
				<regexp value="[a-zA-Z0-9-]{2,20}" />
			</regexp-list>
		</attribute>
		<attribute description="The 'title' attribute provides text that shows up in a 'tooltip' when a user hovers their mouse over the element" name="title">
			<regexp-list>
				<regexp name="htmlTitle" />
			</regexp-list>
		</attribute>
		<attribute description="The 'alt' attribute provides alternative text to users when its visual representation is not available" name="alt">
			<regexp-list>
				<regexp name="paragraph" />
			</regexp-list>
		</attribute>

		<!-- the "style" attribute will be validated by an inline stylesheet scanner, so no need to define anything here - i hate having to special
			case this but no other choice -->

		<attribute description="The 'style' attribute provides the ability for users to change many attributes of the tag's contents using a strict syntax" name="style" />
		<attribute name="media">
			<regexp-list>
				<regexp value="[a-zA-Z0-9,\-\s]+" />
			</regexp-list>
			<literal-list>
				<literal value="screen" />
				<literal value="tty" />
				<literal value="tv" />
				<literal value="projection" />
				<literal value="handheld" />
				<literal value="print" />
				<literal value="braille" />
				<literal value="aural" />
				<literal value="all" />
			</literal-list>
		</attribute>

		<!-- Anchor related -->

		<!-- onInvalid="filterTag" has been removed as per suggestion at OWASP SJ 2007 - just "name" is valid -->

		<attribute name="href">
			<regexp-list>
				<regexp name="onsiteURL" />
				<regexp name="offsiteURL" />
			</regexp-list>
		</attribute>
		<attribute name="name">
			<regexp-list>
				<regexp value="[a-zA-Z0-9\-_\$]+" />

				<!-- have to allow the $ for .NET controls - although, will users be supplying input that has server-generated .NET control names?
					methinks not, but i want to pass my test cases -->

			</regexp-list>
		</attribute>
		<attribute description="The 'shape' attribute defines the shape of the selectable area" name="shape">
			<literal-list>
				<literal value="default" />
				<literal value="rect" />
				<literal value="circle" />
				<literal value="poly" />
			</literal-list>
		</attribute>

		<!-- Table attributes -->

		<attribute name="border">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="cellpadding">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="cellspacing">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="colspan">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="rowspan">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="background">
			<regexp-list>
				<regexp name="onsiteURL" />
			</regexp-list>
		</attribute>
		<attribute name="bgcolor">
			<regexp-list>
				<regexp name="colorName" />
				<regexp name="colorCode" />
			</regexp-list>
		</attribute>
		<attribute name="abbr">
			<regexp-list>
				<regexp name="paragraph" />
			</regexp-list>
		</attribute>
		<attribute description="The 'headers' attribute is a space-separated list of cell IDs" name="headers">
			<regexp-list>
				<regexp value="[a-zA-Z0-9\s*]*" />
			</regexp-list>
		</attribute>
		<attribute name="charoff">
			<regexp-list>
				<regexp value="numberOrPercent" />
			</regexp-list>
		</attribute>
		<attribute name="char">
			<regexp-list>
				<regexp value=".{0,1}" />
			</regexp-list>
		</attribute>
		<attribute description="The 'headers' attribute is a comma-separated list of related header cells" name="axis">
			<regexp-list>
				<regexp value="[a-zA-Z0-9\s*,]*" />
			</regexp-list>
		</attribute>
		<attribute description="The 'nowrap' attribute tells the browser not to wrap text that goes over one line" name="nowrap">
			<regexp-list>
				<regexp name="anything" />

				<!--<regexp value="(nowrap){0,1}"/>-->

			</regexp-list>
		</attribute>

		<!-- Common positioning attributes -->

		<attribute name="width">
			<regexp-list>
				<regexp name="numberOrPercent" />
			</regexp-list>
		</attribute>
		<attribute name="height">
			<regexp-list>
				<regexp name="numberOrPercent" />
			</regexp-list>
		</attribute>
		<attribute description="The 'align' attribute of an HTML element is a direction word, like 'left', 'right' or 'center'" name="align">
			<literal-list>
				<literal value="center" />
				<literal value="middle" />
				<literal value="left" />
				<literal value="right" />
				<literal value="justify" />
				<literal value="char" />
			</literal-list>
		</attribute>
		<attribute description="The 'valign' attribute of an HTML attribute is a direction word, like 'baseline','bottom','middle' or 'top'" name="valign">
			<literal-list>
				<literal value="baseline" />
				<literal value="bottom" />
				<literal value="middle" />
				<literal value="top" />
			</literal-list>
		</attribute>

		<!-- Intrinsic JavaScript Events -->

		<attribute description="The 'onFocus' event is executed when the control associated with the tag gains focus" name="onFocus">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'onBlur' event is executed when the control associated with the tag loses focus" name="onBlur">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'onClick' event is executed when the control associated with the tag is clicked" name="onClick">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'onDblClick' event is executed when the control associated with the tag is clicked twice immediately" name="onDblClick">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'onMouseDown' event is executed when the control associated with the tag is clicked but not yet released" name="onMouseDown">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'onMouseUp' event is executed when the control associated with the tag is clicked after the button is released" name="onMouseUp">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'onMouseOver' event is executed when the user's mouse hovers over the control associated with the tag" name="onMouseOver">
			<literal-list>
				<literal value="javascript:void(0)" />
				<literal value="javascript:history.go(-1)" />
			</literal-list>
		</attribute>
		<attribute description="The 'scope' attribute defines what's covered by the header cells" name="scope">
			<literal-list>
				<literal value="row" />
				<literal value="col" />
				<literal value="rowgroup" />
				<literal value="colgroup" />
			</literal-list>
		</attribute>

		<!-- If you want users to be able to mess with tabindex, uncomment this -->

		<!--<attribute name="tabindex" description="..."> <regexp-list> <regexp name="number"/> </regexp-list> </attribute>-->

		<!-- Input/form related common attributes -->

		<attribute name="disabled">
			<regexp-list>
				<regexp name="anything" />
			</regexp-list>
		</attribute>
		<attribute name="readonly">
			<regexp-list>
				<regexp name="anything" />
			</regexp-list>
		</attribute>
		<attribute name="accesskey">
			<regexp-list>
				<regexp name="anything" />
			</regexp-list>
		</attribute>
		<attribute name="size">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="autocomplete">
			<literal-list>
				<literal value="on" />
				<literal value="off" />
			</literal-list>
		</attribute>
		<attribute name="rows">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
		<attribute name="cols">
			<regexp-list>
				<regexp name="number" />
			</regexp-list>
		</attribute>
	</common-attributes>

	<!-- This requires normal updates as browsers continue to diverge from the W3C and each other. As long as the browser wars continue this
		is going to continue. I'm not sure war is the right word for what's going on. Doesn't somebody have to win a war after a while? Even wars of
		attrition, surely? -->

	<global-tag-attributes>

		<!-- Not valid in base, head, html, meta, param, script, style, and title elements. -->

		<attribute name="id" />
		<attribute name="style" />
		<attribute name="title" />
		<attribute name="class" />

		<!-- Not valid in base, br, frame, frameset, hr, iframe, param, and script elements. -->

		<attribute name="lang" />
	</global-tag-attributes>
	<tags-to-encode>
		<tag>g</tag>
		<tag>grin</tag>
	</tags-to-encode>
	<tag-rules>

		<!-- Tags related to JavaScript -->

		<tag action="remove" name="script" />
		<tag name="noscript" action="validate" /> <!-- although no javascript can fire inside a noscript tag, css is still a viable attack vector -->

		<!-- Frame & related tags -->

		<tag action="remove" name="iframe" />
		<tag action="remove" name="frameset" />
		<tag action="remove" name="frame" />

		<!-- Form related tags -->

		<tag action="validate" name="label">
			<attribute name="for">
				<regexp-list>
					<regexp name="htmlId" />
				</regexp-list>
			</attribute>
		</tag>

		<!-- All formatting tags -->

		<tag action="validate" name="h1" />
		<tag action="validate" name="h2" />
		<tag action="validate" name="h3" />
		<tag action="validate" name="h4" />
		<tag action="validate" name="h5" />
		<tag action="validate" name="h6" />
		<tag action="validate" name="p">
			<attribute name="align" />
		</tag>
		<tag action="validate" name="i" />
		<tag action="validate" name="b" />
		<tag action="validate" name="u" />
		<tag action="validate" name="strong" />
		<tag action="validate" name="em" />
		<tag action="validate" name="small" />
		<tag action="validate" name="big" />
		<tag action="validate" name="pre" />
		<tag action="validate" name="code" />
		<tag action="validate" name="cite" />
		<tag action="validate" name="samp" />
		<tag action="validate" name="sub" />
		<tag action="validate" name="sup" />
		<tag action="validate" name="strike" />
		<tag action="validate" name="center" />
		<tag action="validate" name="blockquote" />
		<tag action="validate" name="hr" />
		<tag action="validate" name="br" />
		<tag action="validate" name="font">
			<attribute name="color">
				<regexp-list>
					<regexp name="colorName" />
					<regexp name="colorCode" />
				</regexp-list>
			</attribute>
			<attribute name="face">
				<regexp-list>
					<regexp value="[\w;, \-]+" />
				</regexp-list>
			</attribute>
			<attribute name="size">
				<regexp-list>
					<regexp value="(\+|-){0,1}(\d)+" />
				</regexp-list>
			</attribute>
		</tag>

		<!-- Anchor and anchor related tags -->

		<tag action="validate" name="a">

			<!-- onInvalid="filterTag" has been removed as per suggestion at OWASP SJ 2007 - just "name" is valid -->

			<attribute name="href">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
				<literal-list>
					<literal value="{0}" />
					<literal value="{1}" />
				</literal-list>
			</attribute>
			<attribute name="class">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
				<literal-list>
					<literal value="{0}" />
				</literal-list>
			</attribute>
			<attribute name="target">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
				<literal-list>
					<literal value="_blank" />
				</literal-list>
			</attribute>
			<attribute name="onclick">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
			</attribute>
			<attribute name="onFocus" />
			<attribute name="onBlur" />
			<attribute name="nohref">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
			</attribute>
			<attribute name="rel">
				<literal-list>
					<literal value="nofollow" />
				</literal-list>
			</attribute>
			<attribute name="name" />
		</tag>
		<tag action="validate" name="abbr">
			<attribute name="title">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
			</attribute>
		</tag>
		<tag action="validate" name="map" />

		<!-- base tag removed per demo - this could be enabled with literal-list values you allow -->

		<!--<tag name="base" action="validate"> <attribute name="href"/> </tag>-->

		<!-- Stylesheet Tags -->

		<tag action="validate" name="style">
			<attribute name="type">
				<literal-list>
					<literal value="text/css" />
				</literal-list>
			</attribute>
			<attribute name="media" />
		</tag>
		<tag action="validate" name="span">
			<attribute name="class">
				<regexp-list>
					<regexp name="anything" />
				</regexp-list>
				<literal-list>
					<literal value="{0}" />
					<literal value="lfr-inline-code" />
				</literal-list>
			</attribute>
		</tag>
		<tag action="validate" name="div">
			<attribute name="align" />
		</tag>

		<!--<attribute name="id"/> what could an attacker do if they could overwrite an existing div definition? prolly something bad -->

		<!--<attribute name="class"/> what could an attacker do if they could specify any class in the namespace? prolly something bad -->

		<!-- Image & image related tags -->

		<tag action="validate" name="img">
			<attribute name="src" onInvalid="removeTag">
				<regexp-list>
					<regexp name="onsiteURL" />
					<regexp name="offsiteURL" />
				</regexp-list>
			</attribute>
			<attribute name="name" />
			<attribute name="alt" />
			<attribute name="height" />
			<attribute name="width" />
			<attribute name="border" />
			<attribute name="align" />
			<attribute name="hspace">
				<regexp-list>
					<regexp name="number" />
				</regexp-list>
			</attribute>
			<attribute name="vspace">
				<regexp-list>
					<regexp name="number" />
				</regexp-list>
			</attribute>
		</tag>

		<!-- no way to do this safely without hooking up the same code to @import to embed the remote stylesheet (malicious user could change
			offsite resource to be malicious after validation -->

		<!--<attribute name="href" onInvalid="removeTag"/>-->

		<tag action="validate" name="link">

			<!--<attribute name="href" onInvalid="removeTag"/>-->

			<attribute name="media" />
			<attribute name="type" onInvalid="removeTag">
				<literal-list>
					<literal value="text/css" />
					<literal value="application/rss+xml" />
					<literal value="image/x-icon" />
				</literal-list>
			</attribute>
			<attribute name="rel">
				<literal-list>
					<literal value="stylesheet" />
					<literal value="shortcut icon" />
					<literal value="search" />
					<literal value="copyright" />
					<literal value="top" />
					<literal value="alternate" />
				</literal-list>
			</attribute>
		</tag>

		<!-- List tags -->

		<tag action="validate" name="ul" />
		<tag action="validate" name="ol" />
		<tag action="validate" name="li" />

		<!-- Dictionary tags -->

		<tag action="truncate" name="dd" />
		<tag action="truncate" name="dl" />
		<tag action="truncate" name="dt" />

		<!-- Table tags (tbody, thead, tfoot) -->

		<tag action="validate" name="thead">
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
		</tag>
		<tag action="validate" name="tbody">
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
		</tag>
		<tag action="validate" name="tfoot">
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
		</tag>
		<tag action="validate" name="table">
			<attribute name="height" />
			<attribute name="width" />
			<attribute name="border" />
			<attribute name="bgcolor" />
			<attribute name="cellpadding" />
			<attribute name="cellspacing" />
			<attribute name="background" />
			<attribute name="align" />
			<attribute name="noresize">
				<literal-list>
					<literal value="noresize" />
					<literal value="" />
				</literal-list>
			</attribute>
		</tag>
		<tag action="validate" name="td">
			<attribute name="background" />
			<attribute name="bgcolor" />
			<attribute name="abbr" />
			<attribute name="axis" />
			<attribute name="headers" />
			<attribute name="scope" />
			<attribute name="nowrap" />
			<attribute name="height" />
			<attribute name="width" />
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
			<attribute name="colspan" />
			<attribute name="rowspan" />
		</tag>
		<tag action="validate" name="th">
			<attribute name="abbr" />
			<attribute name="axis" />
			<attribute name="headers" />
			<attribute name="scope" />
			<attribute name="nowrap" />
			<attribute name="bgcolor" />
			<attribute name="height" />
			<attribute name="width" />
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
			<attribute name="colspan" />
			<attribute name="rowspan" />
		</tag>
		<tag action="validate" name="tr">
			<attribute name="height" />
			<attribute name="width" />
			<attribute name="align" />
			<attribute name="valign" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="background" />
		</tag>
		<tag action="validate" name="colgroup">
			<attribute name="span">
				<regexp-list>
					<regexp name="number" />
				</regexp-list>
			</attribute>
			<attribute name="width" />
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
		</tag>
		<tag action="validate" name="col">
			<attribute name="align" />
			<attribute name="char" />
			<attribute name="charoff" />
			<attribute name="valign" />
			<attribute name="span">
				<regexp-list>
					<regexp name="number" />
				</regexp-list>
			</attribute>
			<attribute name="width" />
		</tag>
		<tag action="validate" name="fieldset" />
		<tag action="validate" name="legend" />
	</tag-rules>

	<!-- CSS validation processing rules -->

	<css-rules>

		<!-- end manual properties -->

	</css-rules>
	<allowed-empty-tags>
		<literal-list>
			<literal value="br" />
			<literal value="hr" />
			<literal value="a" />
			<literal value="img" />
			<literal value="link" />
			<literal value="iframe" />
			<literal value="script" />
			<literal value="object" />
			<literal value="applet" />
			<literal value="frame" />
			<literal value="base" />
			<literal value="param" />
			<literal value="meta" />
			<literal value="input" />
			<literal value="textarea" />
			<literal value="embed" />
			<literal value="basefont" />
			<literal value="col" />
			<literal value="div" />
		</literal-list>
	</allowed-empty-tags>
</anti-samy-rules>