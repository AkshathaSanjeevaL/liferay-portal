/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.liferay.osb.faro.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.osb.faro.model.FaroProject;
import com.liferay.osb.faro.model.FaroProjectModel;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the FaroProject service. Represents a row in the &quot;OSBFaro_FaroProject&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>FaroProjectModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FaroProjectImpl}.
 * </p>
 *
 * @author Matthew Kong
 * @see FaroProjectImpl
 * @generated
 */
public class FaroProjectModelImpl
	extends BaseModelImpl<FaroProject> implements FaroProjectModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a faro project model instance should use the <code>FaroProject</code> interface instead.
	 */
	public static final String TABLE_NAME = "OSBFaro_FaroProject";

	public static final Object[][] TABLE_COLUMNS = {
		{"faroProjectId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createTime", Types.BIGINT}, {"modifiedTime", Types.BIGINT},
		{"name", Types.VARCHAR}, {"accountKey", Types.VARCHAR},
		{"accountName", Types.VARCHAR}, {"corpProjectName", Types.VARCHAR},
		{"corpProjectUuid", Types.VARCHAR}, {"ipAddresses", Types.VARCHAR},
		{"incidentReportEmailAddresses", Types.VARCHAR},
		{"lastAccessTime", Types.BIGINT},
		{"recommendationsEnabled", Types.BOOLEAN},
		{"serverLocation", Types.VARCHAR}, {"services", Types.VARCHAR},
		{"state_", Types.VARCHAR}, {"subscription", Types.VARCHAR},
		{"timeZoneId", Types.VARCHAR}, {"weDeployKey", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("faroProjectId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createTime", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedTime", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accountKey", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accountName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corpProjectName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corpProjectUuid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ipAddresses", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("incidentReportEmailAddresses", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastAccessTime", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("recommendationsEnabled", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("serverLocation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("services", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("state_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("subscription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("timeZoneId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("weDeployKey", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table OSBFaro_FaroProject (faroProjectId LONG not null primary key,groupId LONG,userId LONG,userName VARCHAR(75) null,createTime LONG,modifiedTime LONG,name VARCHAR(75) null,accountKey VARCHAR(75) null,accountName VARCHAR(75) null,corpProjectName VARCHAR(75) null,corpProjectUuid VARCHAR(75) null,ipAddresses STRING null,incidentReportEmailAddresses STRING null,lastAccessTime LONG,recommendationsEnabled BOOLEAN,serverLocation VARCHAR(75) null,services STRING null,state_ VARCHAR(75) null,subscription STRING null,timeZoneId VARCHAR(75) null,weDeployKey VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table OSBFaro_FaroProject";

	public static final String ORDER_BY_JPQL =
		" ORDER BY faroProject.faroProjectId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY OSBFaro_FaroProject.faroProjectId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.osb.faro.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.liferay.osb.faro.model.FaroProject"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.liferay.osb.faro.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.liferay.osb.faro.model.FaroProject"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.liferay.osb.faro.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.liferay.osb.faro.model.FaroProject"),
		true);

	public static final long CORPPROJECTUUID_COLUMN_BITMASK = 1L;

	public static final long GROUPID_COLUMN_BITMASK = 2L;

	public static final long SERVERLOCATION_COLUMN_BITMASK = 4L;

	public static final long USERID_COLUMN_BITMASK = 8L;

	public static final long WEDEPLOYKEY_COLUMN_BITMASK = 16L;

	public static final long FAROPROJECTID_COLUMN_BITMASK = 32L;

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.liferay.osb.faro.service.util.ServiceProps.get(
			"lock.expiration.time.com.liferay.osb.faro.model.FaroProject"));

	public FaroProjectModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _faroProjectId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFaroProjectId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _faroProjectId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FaroProject.class;
	}

	@Override
	public String getModelClassName() {
		return FaroProject.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<FaroProject, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<FaroProject, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProject, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((FaroProject)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<FaroProject, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<FaroProject, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(FaroProject)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<FaroProject, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<FaroProject, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, FaroProject>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			FaroProject.class.getClassLoader(), FaroProject.class,
			ModelWrapper.class);

		try {
			Constructor<FaroProject> constructor =
				(Constructor<FaroProject>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<FaroProject, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<FaroProject, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<FaroProject, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<FaroProject, Object>>();
		Map<String, BiConsumer<FaroProject, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<FaroProject, ?>>();

		attributeGetterFunctions.put(
			"faroProjectId",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getFaroProjectId();
				}

			});
		attributeSetterBiConsumers.put(
			"faroProjectId",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object faroProjectIdObject) {

					faroProject.setFaroProjectId((Long)faroProjectIdObject);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object groupIdObject) {

					faroProject.setGroupId((Long)groupIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object userIdObject) {

					faroProject.setUserId((Long)userIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object userNameObject) {

					faroProject.setUserName((String)userNameObject);
				}

			});
		attributeGetterFunctions.put(
			"createTime",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getCreateTime();
				}

			});
		attributeSetterBiConsumers.put(
			"createTime",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object createTimeObject) {

					faroProject.setCreateTime((Long)createTimeObject);
				}

			});
		attributeGetterFunctions.put(
			"modifiedTime",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getModifiedTime();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedTime",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object modifiedTimeObject) {

					faroProject.setModifiedTime((Long)modifiedTimeObject);
				}

			});
		attributeGetterFunctions.put(
			"name",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getName();
				}

			});
		attributeSetterBiConsumers.put(
			"name",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(FaroProject faroProject, Object nameObject) {
					faroProject.setName((String)nameObject);
				}

			});
		attributeGetterFunctions.put(
			"accountKey",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getAccountKey();
				}

			});
		attributeSetterBiConsumers.put(
			"accountKey",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object accountKeyObject) {

					faroProject.setAccountKey((String)accountKeyObject);
				}

			});
		attributeGetterFunctions.put(
			"accountName",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getAccountName();
				}

			});
		attributeSetterBiConsumers.put(
			"accountName",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object accountNameObject) {

					faroProject.setAccountName((String)accountNameObject);
				}

			});
		attributeGetterFunctions.put(
			"corpProjectName",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getCorpProjectName();
				}

			});
		attributeSetterBiConsumers.put(
			"corpProjectName",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object corpProjectNameObject) {

					faroProject.setCorpProjectName(
						(String)corpProjectNameObject);
				}

			});
		attributeGetterFunctions.put(
			"corpProjectUuid",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getCorpProjectUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"corpProjectUuid",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object corpProjectUuidObject) {

					faroProject.setCorpProjectUuid(
						(String)corpProjectUuidObject);
				}

			});
		attributeGetterFunctions.put(
			"ipAddresses",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getIpAddresses();
				}

			});
		attributeSetterBiConsumers.put(
			"ipAddresses",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object ipAddressesObject) {

					faroProject.setIpAddresses((String)ipAddressesObject);
				}

			});
		attributeGetterFunctions.put(
			"incidentReportEmailAddresses",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getIncidentReportEmailAddresses();
				}

			});
		attributeSetterBiConsumers.put(
			"incidentReportEmailAddresses",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject,
					Object incidentReportEmailAddressesObject) {

					faroProject.setIncidentReportEmailAddresses(
						(String)incidentReportEmailAddressesObject);
				}

			});
		attributeGetterFunctions.put(
			"lastAccessTime",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getLastAccessTime();
				}

			});
		attributeSetterBiConsumers.put(
			"lastAccessTime",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object lastAccessTimeObject) {

					faroProject.setLastAccessTime((Long)lastAccessTimeObject);
				}

			});
		attributeGetterFunctions.put(
			"recommendationsEnabled",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getRecommendationsEnabled();
				}

			});
		attributeSetterBiConsumers.put(
			"recommendationsEnabled",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject,
					Object recommendationsEnabledObject) {

					faroProject.setRecommendationsEnabled(
						(Boolean)recommendationsEnabledObject);
				}

			});
		attributeGetterFunctions.put(
			"serverLocation",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getServerLocation();
				}

			});
		attributeSetterBiConsumers.put(
			"serverLocation",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object serverLocationObject) {

					faroProject.setServerLocation((String)serverLocationObject);
				}

			});
		attributeGetterFunctions.put(
			"services",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getServices();
				}

			});
		attributeSetterBiConsumers.put(
			"services",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object servicesObject) {

					faroProject.setServices((String)servicesObject);
				}

			});
		attributeGetterFunctions.put(
			"state",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getState();
				}

			});
		attributeSetterBiConsumers.put(
			"state",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object stateObject) {

					faroProject.setState((String)stateObject);
				}

			});
		attributeGetterFunctions.put(
			"subscription",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getSubscription();
				}

			});
		attributeSetterBiConsumers.put(
			"subscription",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object subscriptionObject) {

					faroProject.setSubscription((String)subscriptionObject);
				}

			});
		attributeGetterFunctions.put(
			"timeZoneId",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getTimeZoneId();
				}

			});
		attributeSetterBiConsumers.put(
			"timeZoneId",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object timeZoneIdObject) {

					faroProject.setTimeZoneId((String)timeZoneIdObject);
				}

			});
		attributeGetterFunctions.put(
			"weDeployKey",
			new Function<FaroProject, Object>() {

				@Override
				public Object apply(FaroProject faroProject) {
					return faroProject.getWeDeployKey();
				}

			});
		attributeSetterBiConsumers.put(
			"weDeployKey",
			new BiConsumer<FaroProject, Object>() {

				@Override
				public void accept(
					FaroProject faroProject, Object weDeployKeyObject) {

					faroProject.setWeDeployKey((String)weDeployKeyObject);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getFaroProjectId() {
		return _faroProjectId;
	}

	@Override
	public void setFaroProjectId(long faroProjectId) {
		_faroProjectId = faroProjectId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public long getCreateTime() {
		return _createTime;
	}

	@Override
	public void setCreateTime(long createTime) {
		_createTime = createTime;
	}

	@Override
	public long getModifiedTime() {
		return _modifiedTime;
	}

	@Override
	public void setModifiedTime(long modifiedTime) {
		_modifiedTime = modifiedTime;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getAccountKey() {
		if (_accountKey == null) {
			return "";
		}
		else {
			return _accountKey;
		}
	}

	@Override
	public void setAccountKey(String accountKey) {
		_accountKey = accountKey;
	}

	@Override
	public String getAccountName() {
		if (_accountName == null) {
			return "";
		}
		else {
			return _accountName;
		}
	}

	@Override
	public void setAccountName(String accountName) {
		_accountName = accountName;
	}

	@Override
	public String getCorpProjectName() {
		if (_corpProjectName == null) {
			return "";
		}
		else {
			return _corpProjectName;
		}
	}

	@Override
	public void setCorpProjectName(String corpProjectName) {
		_corpProjectName = corpProjectName;
	}

	@Override
	public String getCorpProjectUuid() {
		if (_corpProjectUuid == null) {
			return "";
		}
		else {
			return _corpProjectUuid;
		}
	}

	@Override
	public void setCorpProjectUuid(String corpProjectUuid) {
		_columnBitmask |= CORPPROJECTUUID_COLUMN_BITMASK;

		if (_originalCorpProjectUuid == null) {
			_originalCorpProjectUuid = _corpProjectUuid;
		}

		_corpProjectUuid = corpProjectUuid;
	}

	public String getOriginalCorpProjectUuid() {
		return GetterUtil.getString(_originalCorpProjectUuid);
	}

	@Override
	public String getIpAddresses() {
		if (_ipAddresses == null) {
			return "";
		}
		else {
			return _ipAddresses;
		}
	}

	@Override
	public void setIpAddresses(String ipAddresses) {
		_ipAddresses = ipAddresses;
	}

	@Override
	public String getIncidentReportEmailAddresses() {
		if (_incidentReportEmailAddresses == null) {
			return "";
		}
		else {
			return _incidentReportEmailAddresses;
		}
	}

	@Override
	public void setIncidentReportEmailAddresses(
		String incidentReportEmailAddresses) {

		_incidentReportEmailAddresses = incidentReportEmailAddresses;
	}

	@Override
	public long getLastAccessTime() {
		return _lastAccessTime;
	}

	@Override
	public void setLastAccessTime(long lastAccessTime) {
		_lastAccessTime = lastAccessTime;
	}

	@Override
	public boolean getRecommendationsEnabled() {
		return _recommendationsEnabled;
	}

	@Override
	public boolean isRecommendationsEnabled() {
		return _recommendationsEnabled;
	}

	@Override
	public void setRecommendationsEnabled(boolean recommendationsEnabled) {
		_recommendationsEnabled = recommendationsEnabled;
	}

	@Override
	public String getServerLocation() {
		if (_serverLocation == null) {
			return "";
		}
		else {
			return _serverLocation;
		}
	}

	@Override
	public void setServerLocation(String serverLocation) {
		_columnBitmask |= SERVERLOCATION_COLUMN_BITMASK;

		if (_originalServerLocation == null) {
			_originalServerLocation = _serverLocation;
		}

		_serverLocation = serverLocation;
	}

	public String getOriginalServerLocation() {
		return GetterUtil.getString(_originalServerLocation);
	}

	@Override
	public String getServices() {
		if (_services == null) {
			return "";
		}
		else {
			return _services;
		}
	}

	@Override
	public void setServices(String services) {
		_services = services;
	}

	@Override
	public String getState() {
		if (_state == null) {
			return "";
		}
		else {
			return _state;
		}
	}

	@Override
	public void setState(String state) {
		_state = state;
	}

	@Override
	public String getSubscription() {
		if (_subscription == null) {
			return "";
		}
		else {
			return _subscription;
		}
	}

	@Override
	public void setSubscription(String subscription) {
		_subscription = subscription;
	}

	@Override
	public String getTimeZoneId() {
		if (_timeZoneId == null) {
			return "";
		}
		else {
			return _timeZoneId;
		}
	}

	@Override
	public void setTimeZoneId(String timeZoneId) {
		_timeZoneId = timeZoneId;
	}

	@Override
	public String getWeDeployKey() {
		if (_weDeployKey == null) {
			return "";
		}
		else {
			return _weDeployKey;
		}
	}

	@Override
	public void setWeDeployKey(String weDeployKey) {
		_columnBitmask |= WEDEPLOYKEY_COLUMN_BITMASK;

		if (_originalWeDeployKey == null) {
			_originalWeDeployKey = _weDeployKey;
		}

		_weDeployKey = weDeployKey;
	}

	public String getOriginalWeDeployKey() {
		return GetterUtil.getString(_originalWeDeployKey);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, FaroProject.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FaroProject toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, FaroProject>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FaroProjectImpl faroProjectImpl = new FaroProjectImpl();

		faroProjectImpl.setFaroProjectId(getFaroProjectId());
		faroProjectImpl.setGroupId(getGroupId());
		faroProjectImpl.setUserId(getUserId());
		faroProjectImpl.setUserName(getUserName());
		faroProjectImpl.setCreateTime(getCreateTime());
		faroProjectImpl.setModifiedTime(getModifiedTime());
		faroProjectImpl.setName(getName());
		faroProjectImpl.setAccountKey(getAccountKey());
		faroProjectImpl.setAccountName(getAccountName());
		faroProjectImpl.setCorpProjectName(getCorpProjectName());
		faroProjectImpl.setCorpProjectUuid(getCorpProjectUuid());
		faroProjectImpl.setIpAddresses(getIpAddresses());
		faroProjectImpl.setIncidentReportEmailAddresses(
			getIncidentReportEmailAddresses());
		faroProjectImpl.setLastAccessTime(getLastAccessTime());
		faroProjectImpl.setRecommendationsEnabled(isRecommendationsEnabled());
		faroProjectImpl.setServerLocation(getServerLocation());
		faroProjectImpl.setServices(getServices());
		faroProjectImpl.setState(getState());
		faroProjectImpl.setSubscription(getSubscription());
		faroProjectImpl.setTimeZoneId(getTimeZoneId());
		faroProjectImpl.setWeDeployKey(getWeDeployKey());

		faroProjectImpl.resetOriginalValues();

		return faroProjectImpl;
	}

	@Override
	public int compareTo(FaroProject faroProject) {
		long primaryKey = faroProject.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof FaroProject)) {
			return false;
		}

		FaroProject faroProject = (FaroProject)object;

		long primaryKey = faroProject.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		_originalGroupId = _groupId;

		_setOriginalGroupId = false;

		_originalUserId = _userId;

		_setOriginalUserId = false;

		_originalCorpProjectUuid = _corpProjectUuid;

		_originalServerLocation = _serverLocation;

		_originalWeDeployKey = _weDeployKey;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<FaroProject> toCacheModel() {
		FaroProjectCacheModel faroProjectCacheModel =
			new FaroProjectCacheModel();

		faroProjectCacheModel.faroProjectId = getFaroProjectId();

		faroProjectCacheModel.groupId = getGroupId();

		faroProjectCacheModel.userId = getUserId();

		faroProjectCacheModel.userName = getUserName();

		String userName = faroProjectCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			faroProjectCacheModel.userName = null;
		}

		faroProjectCacheModel.createTime = getCreateTime();

		faroProjectCacheModel.modifiedTime = getModifiedTime();

		faroProjectCacheModel.name = getName();

		String name = faroProjectCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			faroProjectCacheModel.name = null;
		}

		faroProjectCacheModel.accountKey = getAccountKey();

		String accountKey = faroProjectCacheModel.accountKey;

		if ((accountKey != null) && (accountKey.length() == 0)) {
			faroProjectCacheModel.accountKey = null;
		}

		faroProjectCacheModel.accountName = getAccountName();

		String accountName = faroProjectCacheModel.accountName;

		if ((accountName != null) && (accountName.length() == 0)) {
			faroProjectCacheModel.accountName = null;
		}

		faroProjectCacheModel.corpProjectName = getCorpProjectName();

		String corpProjectName = faroProjectCacheModel.corpProjectName;

		if ((corpProjectName != null) && (corpProjectName.length() == 0)) {
			faroProjectCacheModel.corpProjectName = null;
		}

		faroProjectCacheModel.corpProjectUuid = getCorpProjectUuid();

		String corpProjectUuid = faroProjectCacheModel.corpProjectUuid;

		if ((corpProjectUuid != null) && (corpProjectUuid.length() == 0)) {
			faroProjectCacheModel.corpProjectUuid = null;
		}

		faroProjectCacheModel.ipAddresses = getIpAddresses();

		String ipAddresses = faroProjectCacheModel.ipAddresses;

		if ((ipAddresses != null) && (ipAddresses.length() == 0)) {
			faroProjectCacheModel.ipAddresses = null;
		}

		faroProjectCacheModel.incidentReportEmailAddresses =
			getIncidentReportEmailAddresses();

		String incidentReportEmailAddresses =
			faroProjectCacheModel.incidentReportEmailAddresses;

		if ((incidentReportEmailAddresses != null) &&
			(incidentReportEmailAddresses.length() == 0)) {

			faroProjectCacheModel.incidentReportEmailAddresses = null;
		}

		faroProjectCacheModel.lastAccessTime = getLastAccessTime();

		faroProjectCacheModel.recommendationsEnabled =
			isRecommendationsEnabled();

		faroProjectCacheModel.serverLocation = getServerLocation();

		String serverLocation = faroProjectCacheModel.serverLocation;

		if ((serverLocation != null) && (serverLocation.length() == 0)) {
			faroProjectCacheModel.serverLocation = null;
		}

		faroProjectCacheModel.services = getServices();

		String services = faroProjectCacheModel.services;

		if ((services != null) && (services.length() == 0)) {
			faroProjectCacheModel.services = null;
		}

		faroProjectCacheModel.state = getState();

		String state = faroProjectCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			faroProjectCacheModel.state = null;
		}

		faroProjectCacheModel.subscription = getSubscription();

		String subscription = faroProjectCacheModel.subscription;

		if ((subscription != null) && (subscription.length() == 0)) {
			faroProjectCacheModel.subscription = null;
		}

		faroProjectCacheModel.timeZoneId = getTimeZoneId();

		String timeZoneId = faroProjectCacheModel.timeZoneId;

		if ((timeZoneId != null) && (timeZoneId.length() == 0)) {
			faroProjectCacheModel.timeZoneId = null;
		}

		faroProjectCacheModel.weDeployKey = getWeDeployKey();

		String weDeployKey = faroProjectCacheModel.weDeployKey;

		if ((weDeployKey != null) && (weDeployKey.length() == 0)) {
			faroProjectCacheModel.weDeployKey = null;
		}

		return faroProjectCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<FaroProject, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<FaroProject, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProject, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((FaroProject)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<FaroProject, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<FaroProject, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<FaroProject, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((FaroProject)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, FaroProject>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _faroProjectId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private long _createTime;
	private long _modifiedTime;
	private String _name;
	private String _accountKey;
	private String _accountName;
	private String _corpProjectName;
	private String _corpProjectUuid;
	private String _originalCorpProjectUuid;
	private String _ipAddresses;
	private String _incidentReportEmailAddresses;
	private long _lastAccessTime;
	private boolean _recommendationsEnabled;
	private String _serverLocation;
	private String _originalServerLocation;
	private String _services;
	private String _state;
	private String _subscription;
	private String _timeZoneId;
	private String _weDeployKey;
	private String _originalWeDeployKey;
	private long _columnBitmask;
	private FaroProject _escapedModel;

}