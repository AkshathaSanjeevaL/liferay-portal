@component-name = "OSB Site Initializer EVP"
definition {

	var baseURL = PropsUtil.get("portal.url");

	property custom.properties = "feature.flag.LPS-169981=true";
	property osgi.modules.includes = "osb-site-initializer-evp";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer EVP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new EVP Site") {
			EVPUtils.addEVPSite();
		}

		task ("Create an organization") {
			EVPUtils.gotoEVP();

			EVPOrganization.goToCreateOrganization();

			EVPOrganization.fillOrganizationForm(
				bankingInfo = "Bank Test",
				city = "City Test",
				contactEmail = "test@liferay.com",
				contactName = "Contact Test",
				contactPhone = 12345,
				country = "Country Test",
				organizationName = "Organization Test",
				organizationSite = "www.test.com.br",
				smallDescription = "Description Test",
				state = "State Test",
				street = "Street Test",
				taxId = 12345,
				zipCode = "12.345-67");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ObjectAdmin.deleteAllCustomObjectsViaAPI();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "EVP Portal");
		}
	}

	@description = "Story ID: LPS-164733 | Test Summary: Verify that Only the Employee user can not see 'Review button' when organization are in 'Awaiting Approval On EVP' status"
	@priority = 5
	test EmployeeCanNotSeeReviewInAwaitingEVPStatus {
		task ("Given that login with Employee user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "employee@liferay.com",
				userLoginFullName = "Employee User");
		}

		task ("When the Employee goes to organization page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("Then the employee user can not see Review option in kebab menu") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test");

			MenuItem.viewNotPresent(menuItem = "Review");
		}
	}

	@description = "Story ID: LPS-164733 | Test Summary: Verify that Only the Finance user can not see 'Review button' when organization are in 'Awaiting Approval On EVP' status"
	@priority = 5
	test FinanceCanNotSeeReviewInAwaitingEVPStatus {
		task ("Given that login with Finance user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "finance@liferay.com",
				userLoginFullName = "Finance User");
		}

		task ("When the finance user goes to organization page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("Then the finance user can not see Review option in kebab menu") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test");

			MenuItem.viewNotPresent(menuItem = "Review");
		}
	}

	@description = "Story ID: LPS-164733 | Test Summary: Verify that the EVP Staff can approve a new organization"
	@priority = 4
	test ManagerCanApproveOrganization {
		task ("Given that Sign as Manager user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");
		}

		task ("And go to organization page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("When the manager approve the organization created") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test");

			MenuItem.click(menuItem = "Review");

			EVPOrganization.changeStatus(
				button = "Approve",
				typeMessage = "Your organization has been approved!");
		}

		task ("Then the status will be updated to 'Awaiting Finance Approval'") {
			EVPOrganization.viewStatus(
				organizationName = "Organization Test",
				status = "Awaiting Finance Approval");
		}
	}

	@description = "Story ID: LPS-164733 | Test Summary: Verify that the Manager can not see 'Review button' when organization are in 'Awaiting Finance Approval' status"
	@priority = 4
	test ManagerCannotSeeReviewButtonInAwaitingFinanceStatus {
		task ("Given that Sign as Manager user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");
		}

		task ("And go to organization page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("When the manager approve the organization created") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test");

			MenuItem.click(menuItem = "Review");

			EVPOrganization.changeStatus(
				button = "Approve",
				typeMessage = "Your organization has been approved!");
		}

		task ("Then the manager user can not see Review option in kebab menu") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test");

			MenuItem.viewNotPresent(menuItem = "Review");
		}
	}

	@description = "Story ID: LPS-164733 | Test Summary: Verify that the EVP Staff can Reject a new organization"
	@priority = 5
	test ManagerCanRejectOrganization {
		task ("Given that Sign as Manager user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "manager@liferay.com",
				userLoginFullName = "Manager User");
		}

		task ("And go to organization page") {
			EVPUtils.gotoEVP();

			EVPNavigator.goToNavItem(navItem = "Organization");
		}

		task ("When the manager reject the organization created") {
			EVPOrganization.kebabMenuOrganization(organizationName = "Organization Test");

			MenuItem.click(menuItem = "Review");

			EVPOrganization.changeStatus(
				button = "Reject",
				typeMessage = "Your organization has been Reject");
		}

		task ("Then the status will be updated to 'Rejected'") {
			EVPOrganization.viewStatus(
				organizationName = "Organization Test",
				status = "Rejected");
		}
	}

}