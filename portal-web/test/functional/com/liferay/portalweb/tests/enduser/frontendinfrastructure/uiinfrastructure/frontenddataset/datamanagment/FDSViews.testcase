@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Dataset";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given access Datasets admin page") {
			ApplicationsMenu.gotoPortlet(
				category = "Object",
				panel = "Control Panel",
				portlet = "Datasets");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			FrontendDataSetAdmin.deleteAllDatasetEntries();
		}
	}

	@description = "LPS-180896 Confirm that the dataset view deletion is recoverable"
	@priority = 5
	test CanCancelDeletionOnCancelButton {
		task ("The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "/c/fdsentries");
		}

		task ("And Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Description Test",
				key_name = "View Test");
		}

		task ("And select delete and in the modal, click the cancel button") {
			Click(
				key_name = "View Test",
				locator1 = "FrontendDataSetAdmin#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

			ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

			Button.clickCancel();
		}

		task ("Then the dataset View is not deleted") {
			AssertElementPresent(
				key_itemName = "View Test",
				locator1 = "FrontendDataSetAdmin#NAME_OF_VIEWS");
		}
	}

	@description = "LPS-181348. Confirm that a dataset view can be deleted"
	@priority = 5
	test AssertNumberOfCharactersExceededInNameField {
		task ("And Add a Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Dataset Test",
				key_type = "/c/fdsentries");
		}

		task ("When go to the View page of the dataset created.") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Dataset Test");
		}

		task ("And Clicking add button") {
			LexiconEntry.gotoAdd();
		}

		task ("And a user types a name that is more than 280 characters") {
			Type(
				locator1 = "TextInput#NAME",
				value1 = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
		}

		task ("And Filling the description field with 'Test Description'") {
			Type(
				locator1 = "FrontendDataSetAdmin#NEW_DATA_SET_VIEW_DESCRIPTION",
				value1 = "Test Description");
		}

		task ("And Clicking Save button") {
			Button.clickSave();
		}

		task ("Then confirm the error alert is present") {
			Alert.viewErrorMessage(errorMessage = "Error:Your request failed to complete");
		}
	}

	@description = "LPS-181346. Confirm that pagination works right on views page"
	@priority = 3
	test CanAssertPaginationOnFDSViewsPage {
		task ("And Add a Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Dataset Test",
				key_type = "/c/fdsentries");
		}

		task ("When go to the View page of the dataset created.") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Dataset Test");
		}

		task ("And Adding a 6 view called 'View Test 1', 'View Test 2'... and Filling the description field with 'Test Description'") {
			FrontendDataSetAdmin.createDataSetView(
				description = "Test Description",
				key_dataSetViewNameList = "View Test 1,View Test 2,View Test 3,View Test 4,View Test 5,View Test 6");
		}

		task ("And changing the page to 4 entries.") {
			FrontendDataSetAdmin.changePagination(itemsPerPage = "4 Items");
		}

		task ("Then confirm that only 4 entries are displayed") {
			FrontendDataSetAdmin.assertDataSetView(key_dataSetViewNameList = "View Test 1,View Test 2,View Test 3,View Test 4");

			Pagination.viewResults(results = "Showing 1 to 4 of 6 entries.");
		}

		task ("When to switch to page 2") {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		task ("Then 2 entries are displayed") {
			FrontendDataSetAdmin.assertDataSetView(key_dataSetViewNameList = "View Test 5,View Test 6");

			Pagination.viewResults(results = "Showing 5 to 6 of 6 entries.");
		}
	}

	@description = "LPS-180898. Confirm that the user can cancel deletion when clicking close (X) button"
	@priority = 3
	test CanCancelDeletionOnCloseButton {
		task ("When The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "/c/fdsentries");
		}

		task ("And Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Description Test",
				key_name = "View Test");
		}

		task ("And The user tries to delete the view") {
			Click(
				key_name = "View Test",
				locator1 = "FrontendDataSetAdmin#DATA_SET_VIEW_ENTRY_KEBAB_MENU");

			ClickNoError(locator1 = "ObjectPortlet#DELETE_ENTRY_BUTTON");

			AssertElementPresent(
				key_modalText = "Deleting a dataset view is an action that cannot be reversed. The content will be deleted and some dataset fragments may not be displayed.",
				locator1 = "FrontendDataSetAdmin#DELETE_DATA_SET_MODAL_BODY");
		}

		task ("And When the user clicks on the 'X' button in the modal") {
			Click(
				key_modalTitle = "Delete Dataset View",
				locator1 = "Button#CLOSE_MODAL");
		}

		task ("Then The dataset is present in the data set Admin page") {
			AssertElementPresent(
				entryName = "View Test",
				locator1 = "FrontendDataSetAdmin#DATA_SET_VIEW_ENTRY_NAME");
		}
	}

	@description = "LPS-180893. Confirm that a dataset view can be deleted"
	@priority = 5
	test CanDeleteView {
		task ("When The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "Channel");
		}

		task ("And Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Description Test",
				key_name = "View Test");
		}

		task ("And the user deletes a View created") {
			FrontendDataSetAdmin.deleteDataSetView(viewName = "View Test");
		}

		task ("Then Confirm that the Success message should appear") {
			Alert.viewSuccessMessage();
		}

		task ("And The dataset View is not present in the data set View page") {
			AssertTextEquals(
				locator1 = "Message#EMPTY_STATE_INFO",
				value1 = "No Results Found");
		}
	}

}