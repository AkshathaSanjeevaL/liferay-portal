@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Dataset";
	property testray.main.component.name = "Frontend Dataset";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given access to the Datasets admin page") {
			FrontendDataSetAdmin.goToDatasetAdminPage();
		}

		task ("The user goes to add a new Dataset") {
			FrontendDataSetAdmin.createDataSet(
				key_name = "Test Dataset",
				key_type = "/c/fdsentries");
		}

		task ("Add a new view") {
			FrontendDataSetAdmin.goToViews(dataSetName = "Test Dataset");

			FrontendDataSetAdmin.createDataSetView(
				description = "Test Description",
				key_name = "View Test");
		}

		task ("When goes to Fields Tab") {
			FrontendDataSetAdmin.goToTab(
				dataSetViewName = "View Test",
				tabName = "Pagination");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		FrontendDataSetAdmin.deleteAllDatasetEntries();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-183945. Confirm that pagination requires a default value"
	@priority = 4
	test CanAssertDefaultValueIsRequired {
		task ("And the user leaves the field Default Value empty") {
			FrontendDataSetAdmin.changePaginationDefaultItems(defaultPagination = "");

			FrontendDataSetAdmin.goToTab(tabName = "Pagination");
		}

		task ("Assert Save button is disabled") {
			PRMMDFRequest.viewDisabledButton(buttonName = "Save");
		}

		task ("Then an error message appears") {
			AssertElementPresent(
				key_errorMessage = "This field is required.",
				locator1 = "FrontendDataSetAdmin#VIEW_ERROR_MESSAGE");
		}

		task ("And the field will be populated with the default value for Default value: 20	") {
			Refresh();

			FrontendDataSetAdmin.goToTab(tabName = "Pagination");

			AssertElementPresent(
				key_fieldValue = 20,
				locator1 = "FrontendDataSetAdmin#PAGINATION_DEFAULT_ITEMS");
		}
	}

	@description = "LPS-183938. Confirm the default values for 'Pagination Items' and 'Default Value' fields"
	@priority = 4
	test CanAssertDefaultValues {
		task ("Then the default values for Pagination items will be 4, 8, 20, 40, 60, separated by commas") {
			AssertElementPresent(
				key_fieldName = "List of Items per Page",
				key_fieldValue = "4, 8, 20, 40, 60",
				locator1 = "Translation#TARGET_LANGUAGE_TEXT_BOX_FIELD");
		}

		task ("And The default value for the Default Value field is 20") {
			AssertElementPresent(
				key_keyName = 20,
				locator1 = "Picklist#DISABLE_PICKLIST_KEY");
		}
	}

	@description = "LPS-183950. Confirm that pagination creation can be cancelled when clicking on cancel button"
	@ignore = "true"
	@priority = 5
	test CanCancelPaginationCreationOnCancelButton {

		// TODO LPS-183950 CanCancelPaginationCreationOnCancelButton pending implementation

	}

	@description = "LPS-183947. Confirm that pagination can be created"
	@priority = 5
	test CanCreatePagination {
		task ("And the user fills in the pagination items field") {
			FrontendDataSetAdmin.changePaginationItems(paginationItems = "10, 20, 30, 40");
		}

		task ("And fills the default value field") {
			FrontendDataSetAdmin.changePaginationDefaultItems(defaultPagination = 10);
		}

		task ("And saves") {
			Button.clickSave();
		}

		task ("Then a success alert appears.") {
			Alert.viewSuccessMessage();
		}
	}

	@description = "LPS-183941. Confirm the pagination can be created with one pagination item"
	@ignore = "true"
	@priority = 5
	test CanCreateWithOnePaginationItem {

		// TODO LPS-183941 CanCreateWithOnePaginationItem pending implementation

	}

	@description = "LPS-183943. Confirm that pagination cannot exceed 25 pagination items"
	@ignore = "true"
	@priority = 5
	test CannotExceed25PaginationItems {

		// TODO LPS-183943 CannotExceed25PaginationItems pending implementation

	}

	@description = "LPS-183944. Confirm that pagination cannot exceed 1000 items per page"
	@ignore = "true"
	@priority = 5
	test CannotExceed1000ItemsPerPage {

		// TODO LPS-183944 CannotExceed1000ItemsPerPage pending implementation

	}

	@description = "LPS-183948. Confirm that pagination cannot have characters in default value field"
	@priority = 4
	test CannotUseCharactersInDefaultValueField {
		task ("The user fills in the default value field some characters") {
			FrontendDataSetAdmin.changePaginationDefaultItems(defaultPagination = "a");

			FrontendDataSetAdmin.goToTab(tabName = "Pagination");
		}

		task ("Then the user is not allowed to type characters in the Default value field") {
			AssertElementPresent(
				key_errorMessage = "This field is required.",
				locator1 = "FrontendDataSetAdmin#VIEW_ERROR_MESSAGE");
		}
	}

	@description = "LPS-183949. Confirm that pagination cannot have characters in pagination items field"
	@ignore = "true"
	@priority = 4
	test CannotUseCharactersInPaginationItems {

		// TODO LPS-183949 CannotUseCharactersInPaginationItems pending implementation

	}

	@description = "LPS-183946. Confirm that the default value cannot be different from some of the pagination items"
	@priority = 4
	test DefaultValueCannotDivergeFromPaginationItems {
		task ("And the user fills the pagination items field") {
			FrontendDataSetAdmin.changePaginationItems(paginationItems = "10, 20, 30, 40");
		}

		task ("And fills the default value field with a different number of one of the numbers written in the Pagination items field") {
			FrontendDataSetAdmin.changePaginationDefaultItems(defaultPagination = 4);

			FrontendDataSetAdmin.goToTab(tabName = "Pagination");
		}

		task ("Assert Save button is disabled") {
			PRMMDFRequest.viewDisabledButton(buttonName = "Save");
		}

		task ("Then an error message appears") {
			AssertElementPresent(
				key_errorMessage = "The default value must exist in the list of items per page.",
				locator1 = "FrontendDataSetAdmin#VIEW_ERROR_MESSAGE");
		}
	}

	@description = "LPS-183940. Confirm that error appears when pagination item is blank"
	@ignore = "true"
	@priority = 5
	test ErrorAppearsWhenPaginationItemBlank {

		// TODO LPS-183940 ErrorAppearsWhenPaginationItemBlank pending implementation

	}

}