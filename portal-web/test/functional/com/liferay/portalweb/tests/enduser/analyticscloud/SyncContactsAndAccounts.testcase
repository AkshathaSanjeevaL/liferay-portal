@component-name = "portal-analytics-cloud"
definition {
	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}

        task ("Create DXP Site with Commerce") {
			CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium Demo");
		}

        task ("Connect Commerce and AC") {
            ACDXPSettings.connectAnalyticsCloud();
        }

        task ("Get the property name to enable commerce on the right one") {
            var channelName = "Minium Demo Portal";
            var siteName = "Minium Demo";

            ACDXPSettings.getAssignedPropertyName();
        }

        task ("Enable commerce and sync the commerce channel and the related site") {
            ACDXPSettings.syncChannel(
				channelName = "${channelName}",
				propertyName = "${assignedPropertyName}");

            ACDXPSettings.syncSites(
			propertyName = "${assignedPropertyName}",
			siteName = "${siteName}");
        }

        task("Go to the next page to configure people data") {
            Click(
                key_text = "Next",
                locator1 = "Button#ANY");
        }
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownAC();

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}

        else {
            JSONGroup.tearDownNonDefaultGroups();

			ACUtils.tearDownCommerce();

			UserGroup.tearDownCP();
        }
	}

	@description = "Story: LRAC-10859 | Automation ID: LRAC-12658 | Test Summary: Can sync all contacts and accounts"
	@priority = "5"
	test CanSyncAllContactsAndAccounts {
        task("Click on sync all contacts and accounts") {
            ACDXPSettings.syncContactsAndAccountstData();
        }

        task("Check if the toggle was enabled") {
			ACDXPSettings.assertToggleOnOff(
				toggleType = "sync-all-contacts-and-accounts",
				boolean = "true");
        }
    }
    @description = "Story: LRAC-10859 | Automation ID: LRAC-12659 | Test Summary: Can sync all contacts"
	@priority = "5"
	test CanSyncAllContacts {
        task ("Click on sync all contacts") {
			ACDXPSettings.syncContactsData();
        }

		task("Check if the toggle was enabled") {
			ACDXPSettings.assertToggleOnOff(
				toggleType = "sync-all-contacts",
				boolean = "true");
		}
    }

	@description = "Story: LRAC-10859 | Automation ID: LRAC-12666 | Test Summary: Can sync all accounts"
	@priority = "5"
	test CanSyncAllAccounts {
        task ("Click on sync all accounts") {
			ACDXPSettings.syncAccountsData();
        }

		task("Check if the toggle was enabled") {
			ACDXPSettings.assertToggleOnOff(
				toggleType = "sync-all-accounts",
				boolean = "true");
		}
    }
	@description = "Story: LRAC-10859 | Automation ID: LRAC-12669 | Test Summary: Can sync by account groups"
	@priority = "5"
	test CanSyncByAccountGroups {
        task ("Click on sync by account groups") {
			ACDXPSettings.syncAccountsData(accountGroup = "North American Accounts");
        }

		task("See that there's one account selected") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Account Groups",
				syncNumber = "1 Selected");
		}
    }
	@description = "Story: LRAC-10859 | Automation ID: LRAC-12665 | Test Summary: Can sync all contacts by groups"
	@priority = "5"
	test CanSyncAllContactsByGroups {
		JSONUserGroup.addUserGroup(
		    userGroupDescription = "Group 1",
			userGroupName = "Group 1");

        task ("Click on sync by user groups") {
			ACDXPSettings.goToInstanceSettingsAC();

			ACDXPSettings.navToSyncedContactDataMenu();

			ACDXPSettings.syncContactsData(userGroup = "Minium User Group");
        }

		task("See that there's one user group selected") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "User Groups",
				syncNumber = "1 Selected");
		}
    }
	@description = "Story: LRAC-10859 | Automation ID: LRAC-12662 | Test Summary: Can sync all contacts by organizations"
	@priority = "5"
	test CanSyncAllContactsByOrganizations {
        task ("Click on sync by organizations") {
			ACDXPSettings.syncContactsData(orgName = "Minium");
        }

		task("See that there's one organization selected") {
			ACDXPSettings.viewSyncNumberPreview(
				syncFieldName = "Organizations",
				syncNumber = "1 Selected");
		}
    }
}