@component-name = "portal-wcm"
definition {

	property custom.properties = "feature.flag.LPS-179483=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testcase.url = "http://localhost:8080";
	property testray.main.component.name = "AI-Creator";

	setUp {
		task ("Sign in") {
			User.firstLoginPG();
		}
	}

	@description = "This is a test for LPS-179484. The site administrater could access to the OpenAI configuration page of Instance Settings."
	@priority = 4
	test AccessToOpenAIConfigurationPageOfInstanceSettings {
		task ("Given a site administrater goes to the Instance Settings") {
			PortalSettings.openInstanceSettingsAdmin();
		}

		task ("When the site administrater accesses to the OpenAI configuration page") {
			SystemSettings.gotoConfiguration(
				configurationCategory = "AI Creator",
				configurationName = "OpenAI",
				configurationScope = "Virtual Instance Scope");
		}

		task ("Then the site administrater should see OpenAI settings") {
			FormFields.viewCheckboxChecked(fieldName = "Enable OpenAI to Create Content");

			InputField.viewText(
				fieldLabel = "API Key",
				text = "");
		}

		task ("When the site administrater clicks the link of How do I get an API key?") {
			Click(
				key_text = "How do I get an API key?",
				locator1 = "Link#ANY");
		}

		task ("Then the site administrater should see the OpenAI API page opened in a new tab") {
			SelectWindow.selectPopUp(locator1 = "null");

			AssertLocation.assertPartialLocation(value1 = "https://platform.openai.com/docs/api-reference/authentication");
		}
	}

}