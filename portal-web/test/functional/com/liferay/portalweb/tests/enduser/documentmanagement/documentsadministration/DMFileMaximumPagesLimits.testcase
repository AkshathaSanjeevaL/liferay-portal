@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			Site.tearDownCP();
		}
	}

	@description = "This test ensure that the max number of pages generated as preview for PDFs in Instance Setting can limit by the configuration in System Setting."
	@priority = 3
	test CanLimitMaximumPagesOfPDFPreviewInInstanceSettingsByTheConfigurationInSystemSetting {
		property test.name.skip.portal.instance = "DMFileMaximumPagesLimits#CanLimitMaximumPagesOfPDFPreviewInInstanceSettingsByTheConfigurationInSystemSetting";

		// Test content

	}

	@description = "This test ensure that the max number of pages generated as preview for PDFs in Site Setting can limit by the configuration in Instance Setting."
	@e2etest
	@priority = 4
	test CanLimitMaximumPagesOfPDFPreviewInSiteSettingsByTheConfigurationInInstanceSetting {
		property test.name.skip.portal.instance = "DMFileMaximumPagesLimits#CanLimitMaximumPagesOfPDFPreviewInSiteSettingsByTheConfigurationInInstanceSetting";

		// Test content

	}

	@description = "This test ensures that a user can configure the max number of pages generated as preview for PDFs in System Setting."
	@priority = 4
	test CanLimitMaximumPagesOfPDFPreviewInSystemSettings {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			mimeType = "application/pdf",
			sourceFileName = "large_file.pdf");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			siteURLKey = "guest");

		while (IsElementPresent(key_infoMessage = "Generating preview will take a few minutes.", locator1 = "Message#INFO_SPECIFIC")) {
			WaitForElementPresent.waitForLastScript();

			Refresh();
		}

		AssertVisible(
			key_dmDocumentFileName = "large_file.pdf",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_IMAGE_PREVIEW");

		AssertTextEquals.assertPartialText(
			key_title = "Click to jump to a page.",
			locator1 = "Button#ANY_TITLE",
			value1 = 120);

		DMNavigator.openToConfigInSystemSettings(portlet = "PDF Preview");

		Type(
			key_fieldLabel = "Maximum Number of Pages",
			locator1 = "TextInput#GENERIC_NUMBER_INPUT",
			value1 = 60);

		SystemSettings.saveConfiguration();

		Alert.viewSuccessMessageText(successMessage = "Your request completed successfully.");

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "Server Administration");

		ServerAdministration.executeServerResourcesActions(actionsDescription = "Reset preview and thumbnail files for documents and media");

		DMNavigator.openToEntryInAdmin(
			dmDocumentTitle = "large_file.pdf",
			groupName = "Guest",
			siteURLKey = "guest");

		while (IsElementPresent(key_infoMessage = "Generating preview will take a few minutes.", locator1 = "Message#INFO_SPECIFIC")) {
			WaitForElementPresent.waitForLastScript();

			Refresh();
		}

		AssertTextEquals.assertPartialText(
			key_title = "Click to jump to a page.",
			locator1 = "Button#ANY_TITLE",
			value1 = 60);
	}

}