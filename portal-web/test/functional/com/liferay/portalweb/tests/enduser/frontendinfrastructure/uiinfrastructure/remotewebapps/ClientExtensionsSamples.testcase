@component-name = "liferay-sample-workspace"
definition {

	property custom.properties = "feature.flag.LPS-166479=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.liferay.virtual.instance = "false";
	property testray.main.component.name = "Liferay Sample Workspace";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Smoke test Liferay Sample Custom Element 1"
	@priority = 4
	test LiferaySampleCustomElement1Smoke {
		property workspaces.client.extension.names = "liferay-sample-custom-element-1";

		task ("Create a new widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Test Page");

			Navigator.openSitePage(
				pageName = "Test Page",
				siteName = "Guest");
		}

		task ("Add the Liferay Sample Custom Element 1 widget to the page") {
			Portlet.addPG(portletName = "Liferay Sample Custom Element 1");
		}

		task ("Assert the widget's increment button works") {
			AssertTextEquals.assertPartialText(
				locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_COUNTER",
				value1 = 0);

			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_INCREMENT_BUTTON");

			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_INCREMENT_BUTTON");

			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_INCREMENT_BUTTON");

			AssertTextEquals.assertPartialText(
				locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_COUNTER",
				value1 = 3);
		}

		task ("Assert the widget's increment button works") {
			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_DECREMENT_BUTTON");

			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_DECREMENT_BUTTON");

			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_DECREMENT_BUTTON");

			Click(locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_DECREMENT_BUTTON");

			AssertTextEquals.assertPartialText(
				locator1 = "ClientExtension#SAMPLE_CUSTOM_ELEMENT_1_COUNTER",
				value1 = "-1");
		}
	}

	@description = "Smoke test Liferay Sample Custom Element 2"
	@priority = 4
	test LiferaySampleCustomElement2Smoke {
		property workspaces.client.extension.names = "liferay-sample-custom-element-2";

		task ("Given: The Liferay Sample Custom Element 2 is added to a page") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Test Page");

			Navigator.openSitePage(
				pageName = "Test Page",
				siteName = "Guest");

			Portlet.addPG(portletName = "Liferay Sample Custom Element 2");
		}

		task ("Then: Sample element greets the user by name") {
			AssertTextEquals.assertPartialText(
				key_portletName = "Liferay Sample Custom Element 2",
				locator1 = "Portlet#SPECIFIC_PORTLET_SECTION",
				value1 = "Hello Test");
		}

		task ("When: User logs out") {
			User.logoutViaURL();
		}

		task ("And: User navigates to test page") {
			Navigator.openSitePage(
				pageName = "Test Page",
				siteName = "Guest");
		}

		task ("Then: Sample element says 'Hello World'") {
			AssertTextEquals.assertPartialText(
				key_portletName = "Liferay Sample Custom Element 2",
				locator1 = "Portlet#BODY",
				value1 = "Hello World");
		}
	}

	@description = "Smoke test Liferay Sample Global CSS"
	@priority = 4
	test LiferaySampleGlobalCSSSmoke {
		property workspaces.client.extension.names = "liferay-sample-global-css";

		task ("Given: A new widget page is created") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Test Page");

			Navigator.openSitePage(
				pageName = "Test Page",
				siteName = "Guest");
		}

		task ("When: User accesses the Basic Settings of the widget page") {
			PagesAdmin.openPagesAdmin(siteURLKey = "guest");

			PagesAdmin.gotoPageEllipsisMenuItem(
				menuItem = "Configure",
				pageName = "Test Page");

			Navigator.gotoNavTab(navTab = "Design");
		}

		task ("Then: User can add Liferay Sample Global CSS as a CSS Client Extension ") {
			PagesAdmin.addCSSExtensions(extensionNameList = "Liferay Sample Global CSS");

			AssertVisible(
				key_tableEntry = "Liferay Sample Global CSS",
				locator1 = "LexiconTable#TABLE_ENTRY");

			PortletEntry.save();
		}

		task ("And: User can view the changes on the widget page") {
			Navigator.openSitePage(
				pageName = "Test Page",
				siteName = "Guest");

			var pseudoElementContent = Css.getPseudoElementCssValue(
				attribute = "content",
				element = "//a[contains(@class,'logo') and contains(@title,'Go to')]",
				pseudo = ":after");

			TestUtils.assertEquals(
				actual = ${pseudoElementContent},
				expected = "\"Liferay Sample Global CSS\"");
		}
	}

	@description = "Smoke test Liferay Sample Global JS"
	@priority = 4
	test LiferaySampleGlobalJSSmoke {
		property workspaces.client.extension.names = "liferay-sample-global-js";

		task ("Go to the Site Pages configuration screen in Page Admin") {
			PagesAdmin.openConfigureSitePages();
		}

		task ("Add Liferay Sample Global JS as a JavaScript Client Extension for all pages") {
			Navigator.gotoNavTab(navTab = "Design");

			Navigator.gotoNavTab(navTab = "JavaScript");

			PagesAdmin.addJavaScriptExtensions(
				extensionNameList = "Liferay Sample Global JS",
				insertion = "In Page Head");

			PortletEntry.save();
		}

		task ("Navigate to the Home page") {
			var baseURL = PropsUtil.get("portal.url");

			Open.openNoError(locator1 = "${baseURL}/web/guest/home");
		}

		task ("Assert an alert pops up that reads 'Sample Global JS deployed.'") {
			AssertConfirm(value1 = "Sample Global JS deployed.");
		}
	}

}