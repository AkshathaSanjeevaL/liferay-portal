@component-name = "portal-frontend-infrastructure"
definition {

	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Remote Apps";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

        task ("Given config file for client extension of type custom element created") {
			ClientExtension.createGlobalVariableClientExtensionType(type = "customElement");

			ClientExtension.checkConfigFileCreatedProperly();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Home");

			while (IsElementPresent(locator1 = "Navigation#ANY_SITE_NAV_BUT_HOME")) {
				var layoutName = selenium.getText("Navigation#ANY_SITE_NAV_BUT_HOME");

				JSONLayout.deletePublicLayout(
					groupName = "Guest",
					layoutName = "${layoutName}");

				Navigator.gotoPage(pageName = "Home");

				PortalInstances.tearDownCP();
			}

			ClientExtension.tearDownConfig();
		}
	}

	@description = "LPS-169551"
	@priority = "3"
	test HasViewAction {
		property custom.element.client.extension.created = "true";
		property test.name.skip.portal.instance = "ClientExtensionOSGI#HasViewAction";

        // TODO LPS-169551 HasViewAction pending implementation

	}

    @description = "LPS-169552 "
	@priority = "3"
	test ViewActionCanDisplayFieldsAsNotEditable {
		property custom.element.client.extension.created = "true";
		property test.name.skip.portal.instance = "ClientExtensionOSGI#ViewActionCanDisplayFieldsAsNotEditable";

        // TODO LPS-169552 ViewActionCanDisplayFieldsAsNotEditable pending implementation

	}

    @description = "LPS-169554"
	@priority = "4"
	test FieldsAreNotEditableWhenAccessed {
		property custom.element.client.extension.created = "true";
		property test.name.skip.portal.instance = "ClientExtensionOSGI#FieldsAreNotEditableWhenAccessed";

        // TODO LPS-169554 FieldsAreNotEditableWhenAccessed pending implementation

	}


}