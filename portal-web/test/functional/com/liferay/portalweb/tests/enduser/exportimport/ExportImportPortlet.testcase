@component-name = "portal-staging"
definition {

	property ci.retries.disabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Export/Import Framework";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			PagesAdmin.tearDownCP();

			Site.tearDownCP();
		}
	}

	@description = "This is a use case for LPS-182704. TC-1 and TC3: Verify that a confirmation pop-up should show up when Delete Application Data Before Importing checkbox is checked during portlet import process."
	@priority = 5
	test ViewDeleteApplicationDataPopUpInPortletImportProgress {
		task ("Export blank web content and add a new web content entry") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

			LAR.exportPortlet(larFileName = "WebContent_blank_portlet.lar");

			JSONWebcontent.addWebContent(
				content = "Web Content Content",
				groupName = "Guest",
				title = "Web Content Title");
		}

		task ("Click Cancel in the confirmation dialog will return to the import tab") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

			LAR.importPortletWithDeleteApplicationData(
				cancelImport = "true",
				larFileName = "WebContent_blank_portlet.lar");
		}

		task ("Click OK will import successfully") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

			LAR.importPortletWithDeleteApplicationData(larFileName = "WebContent_blank_portlet.lar");

			WebContent.viewDefaultCP(webContentTitle = "Web Content Title");
		}
	}

	@description = "This is a use case for LPS-182704. TC-14 and TC15: Verify that a confirmation pop-up should show up when Delete Application Data Before Importing checkbox is checked during portlet import process on virtual instance."
	@priority = 5
	test ViewDeleteApplicationDataPopUpInPortletImportProgressInVirtualInstance {
		property test.name.skip.portal.instance = "ExportImportPortlet#ViewDeleteApplicationDataPopUpInPortletImportProgressInVirtualInstance";

		task ("Export blank web content") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

			LAR.exportPortlet(larFileName = "WebContent_blank_portlet.lar");
		}

		task ("Add a virtual Instance able.com") {
			HeadlessPortalInstanceAPI.addPortalInstance(
				domain = "www.able.com",
				portalInstanceId = "www.able.com",
				virtualHost = "www.able.com");
		}

		task ("Login at able.com and add a new web content entry") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://www.able.com:8080",
				userEmailAddress = "test@www.able.com");

			WebContentNavigator.openWebContentAdmin(
				baseURL = "http://www.able.com:8080",
				siteURLKey = "guest");

			WebContent.addArticleCP(
				webContentContent = "Web Content Content",
				webContentTitle = "Web Content Title");
		}

		task ("Click Cancel in the confirmation dialog will return to the import tab") {
			WebContentNavigator.openWebContentAdmin(
				baseURL = "http://www.able.com:8080",
				siteURLKey = "guest");

			LAR.importPortletWithDeleteApplicationData(
				cancelImport = "true",
				larFileName = "WebContent_blank_portlet.lar");
		}

		task ("Click OK will import successfully") {
			WebContentNavigator.openWebContentAdmin(
				baseURL = "http://www.able.com:8080",
				siteURLKey = "guest");

			LAR.importPortletWithDeleteApplicationData(larFileName = "WebContent_blank_portlet.lar");

			WebContent.viewDefaultCP(webContentTitle = "Web Content Title");
		}
	}

}