@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testcase.url = "http://localhost:8080";
	property testray.component.names = "Echo Accessibility";
	property testray.main.component.name = "Navigation";

	setUp {
		task ("Sign in") {
			User.firstLoginPG();
		}
	}

	@description = "This is a test for LPS-171044. The site designer could select or deselect a parent node and all its child items via keyboard and mouse."
	@priority = 3
	test SelectOrDeselectParentNodeAndChildItemsViaKeyboardAndMouse {
		task ("Given a site designer has a navigation menu") {
			var siteName = StringUtil.randomString(8);

			var siteURLKey = StringUtil.toLowerCase(${siteName});

			HeadlessSite.addSite(siteName = ${siteName});

			JSONCategory.addVocabulary(
				groupName = ${siteName},
				title = "Vocabulary Name");

			JSONCategory.addCategory(
				groupName = ${siteName},
				title = "Category Name",
				vocabularyName = "Vocabulary Name");

			for (var i : list "1,2,3") {
				JSONCategory.addSubcategory(
					groupName = ${siteName},
					parentCategoryName = "Category Name",
					title = "Subcategory Name ${i}",
					vocabularyName = "Vocabulary Name");
			}

			JSONSitenavigation.addSiteNavigationMenu(
				groupName = ${siteName},
				siteNavigationMenuName = "Navigation Menu Name");
		}

		task ("When the site designer opens the Select Category modal") {
			NavigationMenusAdmin.openNavigationMenusAdmin(siteURLKey = ${siteURLKey});

			NavigationMenusAdmin.editMenu(navigationMenuName = "Navigation Menu Name");

			WaitForPageLoad();

			Button.clickAdd();

			MenuItem.click(menuItem = "Category");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Portlet.expandTree();
		}

		task ("Then the site designer could select or deselect parent node and child items via keyboard and mouse") {
			KeyPress(
				locator1 = "TextInput#SEARCH",
				value1 = "\TAB");

			KeyPress.keyDown(
				key_nodeName = "Category Name",
				locator1 = "Treeview#NODE_CHECKBOX",
				value1 = "\SHIFT");

			Click(
				key_nodeName = "Category Name",
				locator1 = "Treeview#NODE_ITEM");

			KeyPress.keyUp(
				key_nodeName = "Category Name",
				locator1 = "Treeview#NODE_CHECKBOX",
				value1 = "\SHIFT");

			for (var categoryName : list "Category Name,Subcategory Name 1,Subcategory Name 2,Subcategory Name 3") {
				AssertChecked.assertCheckedNotVisible(
					key_nodeName = ${categoryName},
					locator1 = "Treeview#NODE_CHECKBOX");
			}

			KeyPress.keyDown(
				key_nodeName = "Category Name",
				locator1 = "Treeview#NODE_CHECKBOX",
				value1 = "\SHIFT");

			Click(
				key_nodeName = "Category Name",
				locator1 = "Treeview#NODE_ITEM");

			KeyPress.keyUp(
				key_nodeName = "Category Name",
				locator1 = "Treeview#NODE_CHECKBOX",
				value1 = "\SHIFT");

			for (var categoryName : list "Category Name,Subcategory Name 1,Subcategory Name 2,Subcategory Name 3") {
				AssertNotChecked.assertNotCheckedNotVisible(
					key_nodeName = ${categoryName},
					locator1 = "Treeview#NODE_CHECKBOX");
			}
		}
	}

}