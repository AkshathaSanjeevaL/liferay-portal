@component-name = "portal-analytics-cloud"
definition {

	property analytics.cloud.release = "true";
	property analytics.cloud.upstream = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		task ("Copy the token from AC") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Set up instance and sign in DXP") {
			TestCase.setUpPortalInstance();

			ACUtils.launchDXP();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownAC();

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Story: LRAC-10858 | Automation ID: LRAC-12571 | Test Summary: Check that the user can put any name in the property"
	@priority = "5"
	test CanPutAnyNameInNewProperty {
		task ("Connect DXP to AC") {
			ACDXPSettings.connectAnalyticsCloud();
		}

		task ("Create a new property from the list of available properties") {
			ACDXPSettings.createNewProperty(newPropertyName = "AC Property");
		}

		task ("Check that the new property appears in the list") {
			ACDXPSettings.viewGenericListItem(itemValue = "AC Property");
		}

		task ("Create a new property from the list of available properties") {
			ACDXPSettings.createNewProperty(newPropertyName = "DXP");
		}

		task ("Check that the new property appears in the list") {
			ACDXPSettings.viewGenericListItem(itemValue = "DXP");
		}

		task ("Try to create a property with less than 3 letters (limit)") {
			ACDXPSettings.createNewProperty(newPropertyName = "AC");
		}

		task ("Check that an error alert appears in the modal") {
			ACUtils.viewGenericText(textValueList = "Property name does not meet minimum length required.");
		}

		task ("Check that the property creation button is disabled") {
			AssertElementPresent(locator1 = "ACDXPSettings#CONNECT_BUTTON_DISABLED");
		}
	}

	@description = "Story: LRAC-10858 | Automation ID: LRAC-12570 | Test Summary: Check that a property is created automatically after connection"
	@priority = "5"
	test CheckIfPropertyCreatedAutomaticallyAfterConnection {
		task ("Connect DXP to AC") {
			ACDXPSettings.connectAnalyticsCloud();

			var propertyName1 = ACDXPSettings.getAssignedPropertyName();
		}

		task ("Copy the token from AC again") {
			ACUtils.launchAC();

			ACSettings.takeTokenFromAnalyticsCloud();
		}

		task ("Go to DXP") {
			ACUtils.launchDXP();
		}

		task ("Connect DXP to AC again to create a new property automatically") {
			ACDXPSettings.connectAnalyticsCloud();

			var propertyName2 = ACDXPSettings.getAssignedPropertyName();
		}

		task ("Check that other property was automatically created at the top of the list") {
			TestUtils.assertNotEquals(
				actual = "${propertyName2}",
				expected = "${propertyName1}");
		}
	}

	@description = "Story: LRAC-12019 | Automation ID: LRAC-12583 | Test Summary: Check that the property list is sorted by creation date by default"
	@priority = "3"
	test CheckPropertyListSortedByCreationDateByDefault {
		task ("Connect DXP to AC") {
			ACDXPSettings.connectAnalyticsCloud();

			var autoGeneratePropertyName = ACDXPSettings.getAssignedPropertyName();
		}

		task ("Create a new property from the list of available properties") {
			ACDXPSettings.createNewProperty(newPropertyName = "AC Property Sort Default 1");

			var propertyName1 = ACDXPSettings.getAssignedPropertyName();
		}

		task ("Check that the property appears at the top of the list") {
			TestUtils.assertNotEquals(
				actual = "${propertyName1}",
				expected = "${autoGeneratePropertyName}");
		}

		task ("Create a new property from the list of available properties") {
			ACDXPSettings.createNewProperty(newPropertyName = "AC Property Sort Default 2");

			var propertyName2 = ACDXPSettings.getAssignedPropertyName();
		}

		task ("Check that the property appears at the top of the list") {
			TestUtils.assertNotEquals(
				actual = "${propertyName2}",
				expected = "${propertyName1}");
		}

		task ("Cancel to exit the wizard") {
			ACDXPSettings.cancelWizardConfiguration();
		}

		task ("Go to the properties page in the sidebar") {
			ACDXPSettings.navToSyncedSitesMenu();
		}

		task ("Create a new property from the list of available properties") {
			ACDXPSettings.createNewProperty(newPropertyName = "AC Property Sort Default 3");

			var propertyName3 = ACDXPSettings.getAssignedPropertyName();
		}

		task ("Check that the property appears at the top of the list") {
			TestUtils.assertNotEquals(
				actual = "${propertyName3}",
				expected = "${propertyName2}");
		}
	}

}