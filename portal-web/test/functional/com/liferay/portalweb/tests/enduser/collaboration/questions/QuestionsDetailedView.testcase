    @component-name = "portal-questions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Questions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Questions Page");

		JSONLayout.addWidgetToPublicLayout(
			column = 2,
			groupName = "Guest",
			layoutName = "Questions Page",
			widgetName = "Questions");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Message Boards");

			if (IsElementPresent(locator1 = "Questions#QUESTIONS_LIST")) {
				Questions.tearDown();
			}

			PagesAdmin.tearDownCP();
		}
	}

    @description = "Story ID: LPS-152316 | Test Summary: Verify if the User can edit a comment."
	@priority = 5
	test CanEditComment {
        task ("Given that Create a Topic") {
			JSONMBMessage.addCategory(
                categoryDescription = "Description",
                categoryName = "Questions Test Category",
                userEmailAddress = "test@liferay.com");
		}

		task ("And Create a Question with answer") {
			JSONQuestions.addQuestion(
                bodyField = "Body AddQuestion",
                categoryName = "Questions Test Category",
                groupName = "Guest",
                titleField = "Questions AddQuestion");

            JSONQuestions.addAnswer(
                categoryName = "Questions Test Category",
                groupName = "Guest",
                replyBody = "This is my answer",
                threadSubject = "Questions AddQuestion",
                titleField = "Questions AddQuestion");

            Questions.openToQuestionDetails(
                layoutName = "questions-page",
                questionsTitle = "questions-addquestion",
                siteURLKey = "guest",
                topicName = "questions-test-category");
		}

        task ("And create a comment") {
            Questions.replyToComment(commentReply = "This is my reply text");
        }

		task ("When edit a comment") {
            Questions.editComment(contentField = "This is my edited comment");
        }

        task ("Then can view the comment edited") {
            AssertElementPresent(
                key_commentBodyContent = "This is my edited comment",
                locator1 = "Questions#COMMENT_BODY");
		}
	}

}