@component-name = "portal-frontend-infrastructure"
definition {

	property custom.properties = "feature.flag.LPS-164563=true";
	property portal.acceptance = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Frontend Dataset";
	property testray.main.component.name = "Frontend Dataset";

    setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given the creation of a new dataset") {
			FrontendDataSetAdmin.goToDatasetAdminPage();

			JSONFrontendDatasetEntries._createDatasetEntry(
				datasetName = "Dataset Fields Test",
				restApplication = "/headless-admin-taxonomy/v1.0",
				restEndpoint = "/v1.0/keywords/ranked",
				restSchema = "Keyword");
		}

		task ("And adding a dataset view") {
			JSONFrontendDatasetEntries._createFDSViewViaAPI(
				datasetName = "Dataset Fields Test",
				dataSetViewDescription = "FDSViewDescription",
				dataSetViewName = "View Fields Test");
		}

		task ("When go to the View page of the dataset created.") {
			FrontendDataSetAdmin.goToSpecificViewPage(
				datasetName = "Dataset Fields Test",
				key_viewName = "View Fields Test");
		}
        
        task ("When the user accesses the Filters tab") {
			FrontendDataSetAdmin.goToTab(tabName = "Filters");
		}
    }

    tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		FrontendDataSetAdmin.deleteAllDatasetEntries();

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
	}

    @description = "LPS-185344 - Confirms the From and To fields are displayed when creating a new date filter."
	@priority = 5
	test AssertDateFieldsArePresent {
		task("And click on the 'Create Filter' button") {
			Button.click(button = "Create Filter");
		}

		task("When the user adds a name") {
			Type(locator1 = "FrontendDataSetAdmin#NEW_FILTER_NAME",
				value1 = "Test");
		}

		task("And adds 'dateCreated' to the filter") {
			Type(locator1 = "FrontendDataSetAdmin#FILTER_BY_DROPDOWN",
				value1 = "dateCreated");			
		}

		task("Then 'From' field is present") {
			AssertVisible(locator1= "FrontendDataSetAdmin#LABEL",
				key_label = "From");
		}

		task("And 'To' field is also present ") {
			AssertVisible(locator1= "FrontendDataSetAdmin#LABEL",
				key_label = "To");
		}
	}

	@description = "LPS-185346 - Confirms the date fields values when creating a new date filter are YYYY-MM-DD."
	@priority = 3
	test AssertDateFieldsFormat {
		task("And click on the 'Create Filter' button") {
			Button.click(button = "Create Filter");
		}
		
		task("When the user adds a name") {
			Type(locator1 = "FrontendDataSetAdmin#NEW_FILTER_NAME",
				value1 = "Test");
		}

		task("And adds 'dateCreated' to the filter") {
			Type(locator1 = "FrontendDataSetAdmin#FILTER_BY_DROPDOWN",
				value1 = "dateCreated");
		}

		task("Then the default value is 'YYYY-MM-DD' in 'From' field"){
			AssertVisible(locator1 = "FrontendDataSetAdmin#DATE_FIELD_PLACEHOLDER",
			key_placeholderText = "YYYY-MM-DD",
			key_dateField = "From");
		}

		task("And the default value is 'YYYY-MM-DD' in 'To' field") {
			AssertVisible(locator1 = "FrontendDataSetAdmin#DATE_FIELD_PLACEHOLDER",
			key_placeholderText = "YYYY-MM-DD",
			key_dateField = "To");
		}
	}
