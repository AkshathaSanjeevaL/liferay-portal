definition {

	property custom.properties = "feature.flag.LPS-172903=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Client Extensions";
	property testray.main.component.name = "Client Extensions";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Given Client Extension admin page") {
			ApplicationsMenu.gotoPortlet(
				category = "Custom Apps",
				panel = "Applications",
				portlet = "Client Extensions");
		}

		task ("When the user clicks on plus button") {
			LexiconEntry.gotoAdd();
		}

		task ("And clicks on JS Import Map Entry option") {
			DropdownMenuItem.click(menuItem = "Add JS Import Maps Entry");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.gotoPage(pageName = "Home");

			ClientExtensionGeneral.tearDown();
		}
	}

	@description = "LPS-180167. Verify if the Identity field can be hidden"
	@priority = 3
	test CanHiddenIdentityField {
		task ("And clicks on Identity collapse icon") {
			ClientExtensionGeneral.openOrCloseCollapseField(
				key_fieldName = "Identity",
				key_status = "Close");
		}

		task ("Then Name and Description fields are hidden") {
			AssertNotVisible(
				key_fieldName = "Name",
				locator1 = "ClientExtension#ANY_FIELD");

			AssertNotVisible(
				key_fieldName = "Description",
				locator1 = "ClientExtension#ANY_FIELD");
		}
	}

}